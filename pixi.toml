[project]
name = "code-aster"
version = "17.1.12"
description = "A pixi project for building the windows variant of code aster"
channels = ["https://repo.prefix.dev/code-aster", "conda-forge"]
platforms = ["win-64"]

[dependencies]
python = "3.12.4"
vswhere = "*"
libboost-devel = "1.84"
libblas = { version = "*", build = "*mkl" }
liblapack = { version = "*", build = "*mkl" }
mkl-devel = "2024.1"
intel-fortran-rt = "2024.1"
waf = "2.0.27"
numpy = "1.26"
pyyaml = "*"
pytest = "*"
python-dotenv = "*"
cmake = "*"
ninja = "*"
psutil = "*"
pybind11 = "2.13.1"
setuptools = "*"
clang = "19.1.2"
mfront = { version = "*", build = "*debug*" }
mgis = { version = "*", build = "*debug*" }
libmed = { version = "*", build = "*debug*" }
medcoupling = { version = "*", build = "*debug*" }
scotch = { version = "*", build = "*debug*" }
metis = { version = "*", build = "*debug*" }
mumps = { version = "*", build = "*debug*" }

[tasks]
build = { cmd = ["conda_manual_build.bat", "--pixi-build"], description = "Build the project", env = { RUNASTER_ROOT = "%CONDA_PREFIX%/Library", ASTER_ROOT = "%CONDA_PREFIX%", INTEL_VARS_PATH="C:/Program Files (x86)/Intel/oneAPI/compiler/latest/env" } }
install = {cmd=["conda_rearrange.bat"], description="Copy the latest build files to their respective locations"}
test = { cmd = [
    "run_ctest",
    "--resutest=temp\\seq",
    "-L", "submit",
    "-L", "sequential",
    "-LE", "need_data",
    "--timefactor=5.0",
    "--only-failed-results"] , description = "Run the default sequential tests" }
test_scan = { cmd = ["python", "conda/test_scanner/eval_tests.py", "--output", "conda/test_scanner/results"], description = "Scan the test results" }
debug = { cmd = ["python", "conda/scripts/run_tests.py", "--test-file", "comp008b"], description = "Run the debug script on a specific test" }
run_aster = { cmd = ["run_aster.bat"], description = "Run the aster executable (code aster needs to be built and installed)" }

bibfor_cmake_configure = { cmd = [
    "call_compile_ifx.bat",
    "cmake", "-B", "build-cmake", "-G", "Ninja",
    "-DBUILD_BIBFOR=ON",
    "-DWIN32_LEAN_AND_MEAN=ON",
    "-DCMAKE_BUILD_TYPE=release",
    "--fresh"
], description = "Configure the project for building bibfor", env = { FC = "ifx.exe", CC = "clang-cl", CXX = "clang-cl" } }
cmake_bibfor = { cmd = ["ninja", "-C", "build-cmake"], description = "Build bibfor", depends_on = ["bibfor_cmake_configure"] }

[target.win-64.activation]
scripts = ["activate.bat", "activate_intel.bat"]