[project]
name = "code-aster"
version = "17.2.6"
description = "A pixi project for building the windows variant of code aster"
channels = ["conda-forge"]
platforms = ["win-64", "linux-64"]

[environments]
common = { features = ["common"], solve-group = "common", no-default-feature = true }
dev = { features = ["dev", "common"], no-default-feature = true }
int64 = { features = ["int64", "common"], no-default-feature = true }
int32 = { features = ["int32", "common"], no-default-feature = true }
int64d = { features = ["int64d", "common"], no-default-feature = true }
int32d = { features = ["int32d", "common"], no-default-feature = true }
conda = { features = ["conda"], no-default-feature = true }

[feature.conda]
channels = ["conda-forge"]
platforms = ["linux-64", "win-64"]
dependencies = { rattler-build = "*" }

[feature.int64]
channels = ["https://repo.prefix.dev/code-aster-dev", "https://repo.prefix.dev/code-aster", "conda-forge"]
[feature.int64d]
channels = ["https://repo.prefix.dev/code-aster-dev", "https://repo.prefix.dev/code-aster", "conda-forge"]
[feature.int32]
channels = ["https://repo.prefix.dev/code-aster-dev", "https://repo.prefix.dev/code-aster", "conda-forge"]
[feature.int32d]
channels = ["https://repo.prefix.dev/code-aster-dev", "https://repo.prefix.dev/code-aster", "conda-forge"]

[feature.common.dependencies]
python = "==3.12.8"
libboost-devel = "==1.86"
waf = "==2.0.27"
numpy = "1.26.*"
pyyaml = "*"
pytest = "*"
python-dotenv = "*"
pybind11 = "==2.13.1"
setuptools = "*"

[feature.common.target.linux-64.dependencies]
gfortran = "13*"
gxx = "13*"
gcc = "13*"

[feature.common.target.win-64.dependencies]
vswhere = "*"
libblas = { version = "*", build = "*mkl" }
liblapack = { version = "*", build = "*mkl" }
mkl-devel = "*"
cmake = "*"
ninja = "*"
psutil = "*"
clang = "18.*"

[feature.dev.target.win-64.dependencies]
clangdev = "18.*"
pixi-pycharm = "*"

[feature.int64.target.win-64.dependencies]
hdf5 = { version = "*", build = "*release*" }
mfront = { version = "*", build = "*release*" }
mgis = { version = "*", build = "*release*" }
libmed = { version = "*", build = "*release*INT64*" }
medcoupling = { version = "*", build = "*release*INT64*" }
libscotch = { version = "*", build = "*release*INT64*" }
scotch = { version = "*", build = "*release*INT64*" }
metis = { version = "*", build = "*release*INT64*" }
mumps = { version = "*", build = "*release*INT64*" }

[feature.int32.target.win-64.dependencies]
hdf5 = { version = "*", build = "*release*" }
mfront = { version = "*", build = "*release*" }
mgis = { version = "*", build = "*release*" }
libmed = { version = "*", build = "*release*INT32*" }
medcoupling = { version = "*", build = "*release*INT32*" }
libscotch = { version = "*", build = "*release*INT32*" }
scotch = { version = "*", build = "*release*INT32*" }
metis = { version = "*", build = "*release*INT32*" }
mumps = { version = "*", build = "*release*INT32*" }

[feature.int64d.target.win-64.dependencies]
hdf5 = { version = "*", build = "*debug*" }
mfront = { version = "*", build = "*debug*" }
mgis = { version = "*", build = "*debug*" }
libmed = { version = "*", build = "*debug*INT64*" }
medcoupling = { version = "*", build = "*debug*INT64*" }
libscotch = { version = "*", build = "*debug*INT64*" }
scotch = { version = "*", build = "*debug*INT64*" }
metis = { version = "*", build = "*debug*INT64*" }
mumps = { version = "*", build = "*debug*INT64*" }

[feature.int32d.target.win-64.dependencies]
hdf5 = { version = "*", build = "*debug*" }
mfront = { version = "*", build = "*debug*" }
mgis = { version = "*", build = "*debug*" }
libmed = { version = "*", build = "*debug*INT32*" }
medcoupling = { version = "*", build = "*debug*INT32*" }
libscotch = { version = "*", build = "*debug*INT32*" }
scotch = { version = "*", build = "*debug*INT32*" }
metis = { version = "*", build = "*debug*INT32*" }
mumps = { version = "*", build = "*debug*INT32*" }

[feature.conda.target.win-64.tasks]
cbuildn = { cmd = ["rattler-build", "build", "-r", "conda/recipe.yaml", "-m", "conda/config.yaml"] }
cbuild = { cmd = ["rattler-build", "build", "-r", "conda/recipe.yaml","-m", "conda/config.yaml", "-c", "https://repo.prefix.dev/code-aster-dev", "-c", "https://repo.prefix.dev/code-aster", "-c", "conda-forge"] }
ctest = { cmd = ["rattler-build", "test", "-c", "https://repo.prefix.dev/code-aster-dev", "-c", "https://repo.prefix.dev/code-aster", "-c", "conda-forge"] }

[feature.conda.target.linux-64.tasks]
cbuildn = { cmd = ["rattler-build", "build", "-r", "conda/recipe.yaml"] }
cbuild = { cmd = ["rattler-build", "build", "-r", "conda/recipe.yaml", "-m", "conda/config.yaml", "-c", "https://repo.prefix.dev/code-aster-dev", "-c", "https://repo.prefix.dev/code-aster", "-c", "conda-forge"] }
ctest = { cmd = ["rattler-build", "test",  "-c", "https://repo.prefix.dev/code-aster-dev", "-c", "https://repo.prefix.dev/code-aster", "-c", "conda-forge"] }

[feature.int32.target.linux-64.tasks]
build32 = { cmd = ["waf", "configure", "build"], description = "Build the project" }

[feature.int64.target.win-64.tasks]
build64 = { cmd = ["msvc/scripts/conda_manual_build.bat", "--pixi-build", "--int-type64", "--build-debug"], description = "Build the project", env = { INTEL_VARS_PATH = "C:/Program Files (x86)/Intel/oneAPI/compiler/latest/env" } }
install64 = { cmd = ["msvc/scripts/conda_rearrange.bat"], description = "Copy the latest build files to their respective locations" }
test32d = { cmd = ["run_ctest", "--resutest=temp\\int64", "-L", "submit", "-L", "sequential", "-LE", "need_data", "--timefactor=5.0", "--only-failed-results"], description = "Run the default sequential tests" }

[feature.int64d.target.win-64.tasks]
build64d = { cmd = ["msvc/scripts/conda_manual_build.bat", "--pixi-build", "--int-type64", "--build-debug"], description = "Build the project", env = { INTEL_VARS_PATH = "C:/Program Files (x86)/Intel/oneAPI/compiler/latest/env" } }
install64d = { cmd = ["msvc/scripts/conda_rearrange.bat"], description = "Copy the latest build files to their respective locations" }
test32d = { cmd = ["run_ctest", "--resutest=temp\\int64d", "-L", "submit", "-L", "sequential", "-LE", "need_data", "--timefactor=5.0", "--only-failed-results"], description = "Run the default sequential tests" }

[feature.int32.target.win-64.tasks]
build32 = { cmd = ["msvc/scripts/conda_manual_build.bat", "--pixi-build"], description = "Build the project", env = { INTEL_VARS_PATH = "C:/Program Files (x86)/Intel/oneAPI/compiler/latest/env" } }
install32 = { cmd = ["msvc/scripts/conda_rearrange.bat"], description = "Copy the latest build files to their respective locations" }
test32d = { cmd = ["run_ctest", "--resutest=temp\\int32", "-L", "submit", "-L", "sequential", "-LE", "need_data", "--timefactor=5.0", "--only-failed-results"], description = "Run the default sequential tests" }

[feature.int32d.target.win-64.tasks]
build32d = { cmd = ["msvc/scripts/conda_manual_build.bat", "--pixi-build", "--build-debug"], description = "Build the project", env = { INTEL_VARS_PATH = "C:/Program Files (x86)/Intel/oneAPI/compiler/latest/env" } }
install32d = { cmd = ["msvc/scripts/conda_rearrange.bat"], description = "Copy the latest build files to their respective locations" }
test32d = { cmd = ["run_ctest", "--resutest=temp\\int32d", "-L", "submit", "-L", "sequential", "-LE", "need_data", "--timefactor=5.0", "--only-failed-results"], description = "Run the default sequential tests" }

test = { cmd = [
    "run_ctest",
    "--resutest=temp\\seq",
    "-L", "submit",
    "-L", "sequential",
    "-LE", "need_data",
    "--timefactor=5.0",
    "--only-failed-results"], description = "Run the default sequential tests" }

[feature.dev.target.win-64.tasks]
test_scan = { cmd = ["python", "conda/test_scanner/eval_tests.py", "--output", "conda/test_scanner/results"], description = "Scan the test results" }
debug = { cmd = ["python", "conda/scripts/run_tests.py", "--test-file", "comp008b"], description = "Run the debug script on a specific test" }
run_aster = { cmd = ["run_aster.bat"], description = "Run the aster executable (code aster needs to be built and installed)" }
dumpbin = { cmd = ["dumpbin", ], description = "Dump the dependencies of the aster executable" }

[feature.int64.target.win-64.activation]
scripts = ["msvc/scripts/activate.bat", "msvc/scripts/activate_intel.bat"]
[feature.int64d.target.win-64.activation]
scripts = ["msvc/scripts/activate.bat", "msvc/scripts/activate_intel.bat"]
[feature.int32.target.win-64.activation]
scripts = ["msvc/scripts/activate.bat", "msvc/scripts/activate_intel.bat"]
[feature.int32d.target.win-64.activation]
scripts = ["msvc/scripts/activate.bat", "msvc/scripts/activate_intel.bat"]