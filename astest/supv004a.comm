# coding=utf-8
# --------------------------------------------------------------------
# Copyright (C) 1991 - 2023 - EDF R&D - www.code-aster.org
# This file is part of code_aster.
#
# code_aster is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# code_aster is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with code_aster.  If not, see <http://www.gnu.org/licenses/>.
# --------------------------------------------------------------------

# person_in_charge: mathieu.courtois at edf.fr

# Note: "--hide-command" is used in the '.export' file.
import unittest
import sys


import code_aster
from code_aster.Commands import FIN

code_aster.init("--test")
test = code_aster.TestCase()

print("\n\n+++ testing supv004a_solvers...\n", flush=True)
result = unittest.main(argv=["comm"], module="supv004a_solvers", exit=False, verbosity=2).result
# to flush printings from unittest
sys.stdout.flush()
sys.stderr.flush()

test.assertTrue(result.wasSuccessful())

print("\n\n+++ testing supv004a_miss...\n", flush=True)
result = unittest.main(argv=["comm"], module="supv004a_miss", exit=False, verbosity=2).result
# to flush printings from unittest
sys.stdout.flush()
sys.stderr.flush()

test.assertTrue(result.wasSuccessful())

print("\n\n+++ testing supv004a_contrib_tensor...\n", flush=True)

result = unittest.main(
    argv=["comm"], module="supv004a_contrib_tensor", exit=False, verbosity=2
).result
# to flush printings from unittest
sys.stdout.flush()
sys.stderr.flush()

test.assertTrue(result.wasSuccessful())

test.printSummary()

# suite.addTests(ldr.discover(".", pattern="*.py"))
# suite.addTests(ldr.discover("code_aster.MacroCommands.Miss", pattern="*.py"))
# suite.addTests(ldr.discover("code_aster.MacroCommands.Contrib", pattern="*.py"))

code_aster.close()
