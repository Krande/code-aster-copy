# coding=utf-8
# --------------------------------------------------------------------
# Copyright (C) 1991 - 2022 - EDF R&D - www.code-aster.org
# This file is part of code_aster.
#
# code_aster is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# code_aster is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with code_aster.  If not, see <http://www.gnu.org/licenses/>.
# --------------------------------------------------------------------

DEBUT( CODE = _F( NIV_PUB_WEB = 'INTERNET'), DEBUG = _F( SDVERI = 'OUI'),);

MA = LIRE_MAILLAGE( FORMAT = "MED",
                    UNITE = 20);

MODEL = AFFE_MODELE( MAILLAGE = MA,
                     AFFE = _F( GROUP_MA = 'PoutreAB',
                                PHENOMENE = 'MECANIQUE',
                                MODELISATION = 'POU_D_E'),);

CARA = AFFE_CARA_ELEM( MODELE=MODEL,
                       POUTRE=_F(CARA=('HY', 'HZ'),
                                 GROUP_MA=('PoutreAB', ),
                                 SECTION='RECTANGLE',
                                 VALE=(0.5, 0.3)))

# on cree une sd evol_elas avec des champs d'efforts imposes :
#-------------------------------------------------------------
#compression uniforme + effort transversal
CHEFF1 = CREA_CHAMP( MAILLAGE = MA, OPERATION = 'AFFE', TYPE_CHAM = 'CART_SIEF_R',
                     AFFE = _F( GROUP_MA = 'PoutreAB',
                                NOM_CMP = ('N','VY','VZ','MT','MFY','MFZ'),
                                VALE     = (-1.e6, 1.e5, 0.0, 0.0, 0.0, 0.0),),);

#section totalement tendue (pivot A "vertical") + effort transversal
CHEFF2 = CREA_CHAMP( MAILLAGE = MA, OPERATION = 'AFFE', TYPE_CHAM = 'CART_SIEF_R',
                     AFFE = _F( GROUP_MA = 'PoutreAB',
                                NOM_CMP = ('N','VY','VZ','MT','MFY','MFZ'),
                                VALE     = (1.e6, -1.e5, 0.0, 0.0, 0.0, 0.0),),);

#section totalement tendue (pivot A "vertical") + torsion
CHEFF3 = CREA_CHAMP( MAILLAGE = MA, OPERATION = 'AFFE', TYPE_CHAM = 'CART_SIEF_R',
                     AFFE = _F( GROUP_MA = 'PoutreAB',
                                NOM_CMP = ('N','VY','VZ','MT','MFY','MFZ'),
                                VALE     = (1.e6, -1.e5, 0.0, 1.e4, 0.0, 0.0),),);

#fibre inférieure tendue en Y
CHEFF4 = CREA_CHAMP( MAILLAGE = MA, OPERATION = 'AFFE', TYPE_CHAM = 'CART_SIEF_R',
                     AFFE = _F( GROUP_MA = 'PoutreAB',
                                NOM_CMP = ('N','VY','VZ','MT','MFY','MFZ'),
                                VALE     = (0.0, 0.0, 0.0, 0.0, 1.e5, 0.0),),);

#fibre supérieure tendue en Z
CHEFF5 = CREA_CHAMP( MAILLAGE = MA, OPERATION = 'AFFE', TYPE_CHAM = 'CART_SIEF_R',
                     AFFE = _F( GROUP_MA = 'PoutreAB',
                                NOM_CMP = ('N','VY','VZ','MT','MFY','MFZ'),
                                VALE     = (0.0, 0.0, 0.0, 0.0, 0, -1.e5),),);

#section partiellement tendue
CHEFF6 = CREA_CHAMP( MAILLAGE = MA, OPERATION = 'AFFE', TYPE_CHAM = 'CART_SIEF_R',
                     AFFE = _F( GROUP_MA = 'PoutreAB',
                                NOM_CMP = ('N','VY','VZ','MT','MFY','MFZ'),
                                VALE     = (1.e5, 0.0, 0.0, 0.0, -1.e5, 0.0),),);

#section partiellement tendue
CHEFF7 = CREA_CHAMP( MAILLAGE = MA, OPERATION = 'AFFE', TYPE_CHAM = 'CART_SIEF_R',
                     AFFE = _F( GROUP_MA = 'PoutreAB',
                                NOM_CMP = ('N','VY','VZ','MT','MFY','MFZ'),
                                VALE     = (1.e5, 0.0, 0.0, 0.0, 0, -1.e5),),);

#section totalement tendue
CHEFF8 = CREA_CHAMP( MAILLAGE = MA, OPERATION = 'AFFE', TYPE_CHAM = 'CART_SIEF_R',
                     AFFE = _F( GROUP_MA = 'PoutreAB',
                                NOM_CMP = ('N','VY','VZ','MT','MFY','MFZ'),
                                VALE     = (2.e6, 0.0, 0.0, 0.0, -1.e5, 0.0),),);

#flexion déviée
CHEFF9 = CREA_CHAMP( MAILLAGE = MA, OPERATION = 'AFFE', TYPE_CHAM = 'CART_SIEF_R',
                     AFFE = _F( GROUP_MA = 'PoutreAB',
                                NOM_CMP = ('N','VY','VZ','MT','MFY','MFZ'),
                                VALE     = (0.0, 0.0, 0.0, 0.0, 1.e5, -15.e4),),);

#flexion déviée composée
CHEFF10 = CREA_CHAMP( MAILLAGE = MA, OPERATION = 'AFFE', TYPE_CHAM = 'CART_SIEF_R',
                     AFFE = _F( GROUP_MA = 'PoutreAB',
                                NOM_CMP = ('N','VY','VZ','MT','MFY','MFZ'),
                                VALE     = (-3.e6, 0.0, 0.0, 0.0, 1.e5, -15.e4),),);

CHEFF11 = CREA_CHAMP( MAILLAGE = MA, OPERATION = 'AFFE', TYPE_CHAM = 'CART_SIEF_R',
                     AFFE = _F( GROUP_MA = 'PoutreAB',
                                NOM_CMP = ('N','VY','VZ','MT','MFY','MFZ'),
                                 VALE     = ( 0.0,  0.0,  0.0,  0.0, -150e3, 0.0),),);

#pivot B 
CHEFF12 = CREA_CHAMP( MAILLAGE = MA, OPERATION = 'AFFE', TYPE_CHAM = 'CART_SIEF_R',
                     AFFE = _F( GROUP_MA = 'PoutreAB',
                                NOM_CMP = ('N','VY','VZ','MT','MFY','MFZ'),
                                 VALE     = ( 0.0,  0.0,  0.0,  0.0, -26e4, 0.0),),);

# vrai pivot C avec compression totale dune facette sur la section entière
CHEFF13 = CREA_CHAMP( MAILLAGE = MA, OPERATION = 'AFFE', TYPE_CHAM = 'CART_SIEF_R',
                     AFFE = _F( GROUP_MA = 'PoutreAB',
                                NOM_CMP = ('N','VY','VZ','MT','MFY','MFZ'),
                                 VALE     = ( 0.0,  0.0,  0.0,  0.0, -38e4, 0.0),),);

CHEFF14 = CREA_CHAMP( MAILLAGE = MA, OPERATION = 'AFFE', TYPE_CHAM = 'CART_SIEF_R',
                     AFFE = _F( GROUP_MA = 'PoutreAB',
                                NOM_CMP = ('N','VY','VZ','MT','MFY','MFZ'),
                                VALE     = (-45.e5, 1.e5, 0.0, 0.0, 38.e4, 0.0),),);


RESUELU = CREA_RESU( OPERATION = 'AFFE',
                     TYPE_RESU = 'EVOL_ELAS',
                     NOM_CHAM = 'EFGE_ELNO',
                     AFFE = (_F( CHAM_GD = CHEFF1, INST = 1., MODELE = MODEL, CARA_ELEM = CARA,),
                             _F( CHAM_GD = CHEFF2, INST = 2., MODELE = MODEL, CARA_ELEM = CARA,),
                             _F( CHAM_GD = CHEFF3, INST = 3., MODELE = MODEL, CARA_ELEM = CARA,),
                             _F( CHAM_GD = CHEFF4, INST = 4., MODELE = MODEL, CARA_ELEM = CARA,),
                             _F( CHAM_GD = CHEFF5, INST = 5., MODELE = MODEL, CARA_ELEM = CARA,),
                             _F( CHAM_GD = CHEFF6, INST = 6., MODELE = MODEL, CARA_ELEM = CARA,),
                             _F( CHAM_GD = CHEFF7, INST = 7., MODELE = MODEL, CARA_ELEM = CARA,),
                             _F( CHAM_GD = CHEFF8, INST = 8., MODELE = MODEL, CARA_ELEM = CARA,),
                             _F( CHAM_GD = CHEFF9, INST = 9., MODELE = MODEL, CARA_ELEM = CARA,),
                             _F( CHAM_GD = CHEFF10, INST = 10., MODELE = MODEL, CARA_ELEM = CARA,),
                             _F( CHAM_GD = CHEFF11, INST = 11., MODELE = MODEL, CARA_ELEM = CARA,),
                             _F( CHAM_GD = CHEFF12, INST = 12., MODELE = MODEL, CARA_ELEM = CARA,),
                             _F( CHAM_GD = CHEFF13, INST = 13., MODELE = MODEL, CARA_ELEM = CARA,),
                             _F( CHAM_GD = CHEFF14, INST = 14., MODELE = MODEL, CARA_ELEM = CARA),),);


# CAS 1 - calcul du ferraillage :
#--------------------------------

RESUELU1 = CALC_FERRAILLAGE(RESULTAT = RESUELU, reuse = RESUELU,
                            CODIFICATION = 'EC2',
                            TYPE_COMB = 'ELU',
                            INST = ( 1.,2.,3.,4.,5.,6.,7.,8.,9.,10.,11.,12.,13.,14.),
                            AFFE = (_F( TOUT = 'OUI',
                                        TYPE_STRUCTURE = '1D',
                                        C_SUP_Y = 0.04,
                                        C_INF_Y = 0.04,
                                        C_SUP_Z = 0.04,
                                        C_INF_Z = 0.04,
                                        FYK = 500.e6,
                                        EYS = 210.e9,
                                        TYPE_DIAGRAMME = 'B2',
                                        FCK = 35.e6,
                                        GAMMA_S = 1.15,
                                        GAMMA_C = 1.5,
                                        ALPHA_CC = 1.0,
                                        UNITE_CONTRAINTE = 'Pa',
                                        UNITE_DIMENSION = 'm',
                                        RHO_ACIER = 7800.),),);

COMP = ['AYI','AYS','AZI','AZS','AST','ATOT','DNSVOL','CONSTRUC'];
#-----------------------------------------------------
# Tests pour CAS 1
#-----------------------------------------------------
D_ref = [
           [0.00000000000000E+00,  0.00000000000000E+00,  0.00000000000000E+00,  0.00000000000000E+00,  0.00039313435143929656,  0.00000000000000E+00,  10.221493137421712,  0.04657331616717533], #1
           [5.75000000000000E-04,  5.75000000000000E-04,  5.75000000000000E-04,  5.75000000000000E-04,  0.00039313435143929656,  2.30000000000000E-03,  129.82149313742173,  0.31235109394495314], #2
           [5.75000000000000E-04,  5.75000000000000E-04,  5.75000000000000E-04,  5.75000000000000E-04,  0.0004899058841012773,  2.30000000000000E-03,  132.33755298663323,  0.3238152948476425], #3
           [5.18123984855709E-04,  0.00000000000000E+00,  0.00000000000000E+00,  0.00000000000000E+00,  0.00000000000000E+00,  5.18123984855709E-04,  2.69424472124969E+01,  5.98721049166597E-02], #4
           [0.00000000000000E+00,  0.00000000000000E+00,  0.00000000000000E+00,  9.49184236626372E-04,  0.00000000000000E+00,  9.49184236626372E-04,  4.93575803045713E+01,  1.09683511787936E-01], #5
           [0.00000000000000E+00,  6.36136001321168E-04,  0.00000000000000E+00,  0.00000000000000E+00,  0.00000000000000E+00,  6.36136001321168E-04,  3.30790720687007E+01,  7.35090490415572E-02], #6
           [0.00000000000000E+00,  0.00000000000000E+00,  0.00000000000000E+00,  1.06758602612194E-03,  0.00000000000000E+00,  1.06758602612194E-03,  5.55144733583406E+01,  1.23365496351868E-01], #7
           [1.75238095238095E-03,  2.84761904761905E-03,  0.00000000000000E+00,  0.00000000000000E+00,  0.00000000000000E+00,  4.60000000000000E-03,  2.39200000000000E+02,  5.31555555555556E-01], #8
           [1.22170925374224E-03,  0.00000000000000E+00,  0.00000000000000E+00,  3.50145034656051E-03,  0.00000000000000E+00,  4.72315960030275E-03,  2.45604299215743E+02,  5.45787331590540E-01], #9
           [-1.00000000000000E+00, -1.00000000000000E+00, -1.00000000000000E+00, -1.00000000000000E+00, -1.00000000000000E+00, -1.00000000000000E+00, -1.00000000000000E+00, -1.00000000000000E+00], #10
           [0.00000000000000E+00,  7.92390093148825E-04,  0.00000000000000E+00,  0.00000000000000E+00,  0.00000000000000E+00,  7.92390093148825E-04,  4.12042848437389E+01,  9.15650774305309E-02], #11
           [0.00000000000000E+00,  1.43999329534403E-03,  0.00000000000000E+00,  0.00000000000000E+00,  0.00000000000000E+00,  1.43999329534403E-03,  7.48796513578895E+01,  1.66399225239754E-01], #12
           [0.00000000000000E+00,  2.23821169164216E-03,  0.00000000000000E+00,  0.00000000000000E+00,  0.00000000000000E+00,  2.23821169164216E-03,  1.16387007965392E+02,  2.58637795478649E-01], #13
           [-1.00000000000000E+00, -1.00000000000000E+00, -1.00000000000000E+00, -1.00000000000000E+00, -1.00000000000000E+00, -1.00000000000000E+00, -1.00000000000000E+00, -1.00000000000000E+00], #14
];

D_calc = [
           [0.00000000000000E+00,  0.00000000000000E+00,  0.00000000000000E+00,  0.00000000000000E+00,  0.00039313435143929656,  0.00000000000000E+00,  10.221493137421712,  0.04657331616717533], #1
           [5.75000000000000E-04,  5.75000000000000E-04,  5.75000000000000E-04,  5.75000000000000E-04,  0.00039313435143929656,  2.30000000000000E-03,  129.82149313742173,  0.31235109394495314], #2
           [5.75000000000000E-04,  5.75000000000000E-04,  5.75000000000000E-04,  5.75000000000000E-04,  0.0004899058841012773,  2.30000000000000E-03,  132.33755298663323,  0.3238152948476425], #3
           [5.18123984855709E-04,  0.00000000000000E+00,  0.00000000000000E+00,  0.00000000000000E+00,  0.00000000000000E+00,  5.18123984855709E-04,  2.69424472124969E+01,  5.98721049166597E-02], #4
           [0.00000000000000E+00,  0.00000000000000E+00,  0.00000000000000E+00,  9.49184236626372E-04,  0.00000000000000E+00,  9.49184236626372E-04,  4.93575803045713E+01,  1.09683511787936E-01], #5
           [0.00000000000000E+00,  6.36136001321168E-04,  0.00000000000000E+00,  0.00000000000000E+00,  0.00000000000000E+00,  6.36136001321168E-04,  3.30790720687007E+01,  7.35090490415572E-02], #6
           [0.00000000000000E+00,  0.00000000000000E+00,  0.00000000000000E+00,  1.06758602612194E-03,  0.00000000000000E+00,  1.06758602612194E-03,  5.55144733583406E+01,  1.23365496351868E-01], #7
           [1.75238095238095E-03,  2.84761904761905E-03,  0.00000000000000E+00,  0.00000000000000E+00,  0.00000000000000E+00,  4.60000000000000E-03,  2.39200000000000E+02,  5.31555555555556E-01], #8
           [1.22170925374224E-03,  0.00000000000000E+00,  0.00000000000000E+00,  3.50145034656051E-03,  0.00000000000000E+00,  4.72315960030275E-03,  2.45604299215743E+02,  5.45787331590540E-01], #9
           [-1.00000000000000E+00, -1.00000000000000E+00, -1.00000000000000E+00, -1.00000000000000E+00, -1.00000000000000E+00, -1.00000000000000E+00, -1.00000000000000E+00, -1.00000000000000E+00], #10
           [0.00000000000000E+00,  7.92390093148825E-04,  0.00000000000000E+00,  0.00000000000000E+00,  0.00000000000000E+00,  7.92390093148825E-04,  4.12042848437389E+01,  9.15650774305309E-02], #11
           [0.00000000000000E+00,  1.43999329534403E-03,  0.00000000000000E+00,  0.00000000000000E+00,  0.00000000000000E+00,  1.43999329534403E-03,  7.48796513578895E+01,  1.66399225239754E-01], #12
           [0.00000000000000E+00,  2.23821169164216E-03,  0.00000000000000E+00,  0.00000000000000E+00,  0.00000000000000E+00,  2.23821169164216E-03,  1.16387007965392E+02,  2.58637795478649E-01], #13
           [-1.00000000000000E+00, -1.00000000000000E+00, -1.00000000000000E+00, -1.00000000000000E+00, -1.00000000000000E+00, -1.00000000000000E+00, -1.00000000000000E+00, -1.00000000000000E+00], #14
];

for j in range(len(D_ref)) :
    for i,ncmp in enumerate(COMP) :
        if (D_ref[j][i] == 0):
            TEST_RESU( RESU = _F( RESULTAT = RESUELU1,
                                  INST = j+1.0,
                                  NOM_CHAM = 'FERRAILLAGE',
                                  NOM_CMP = ncmp,
                                  MAILLE = 'M1',
                                  LEGENDE = 'ELU',
                                  VALE_REFE = D_ref[j][i],
                                  VALE_CALC = D_calc[j][i],
                                  REFERENCE = 'ANALYTIQUE',
                                  ORDRE_GRANDEUR = 1.e-3,
                                  CRITERE = 'ABSOLU'),);
        else: 
            TEST_RESU( RESU = _F( RESULTAT = RESUELU1,
                                  INST = j+1.0,
                                  NOM_CHAM = 'FERRAILLAGE',
                                  NOM_CMP = ncmp,
                                  MAILLE = 'M1',
                                  LEGENDE = 'ELU',
                                  VALE_REFE = D_ref[j][i],
                                  REFERENCE = 'ANALYTIQUE',
                                  PRECISION = 1e-4,
                                  VALE_CALC=D_calc[j][i]),);

# CAS 2 - calcul du ferraillage avec FERR_COMP = 'OUI' :
#-------------------------------------------------------

RESUELU2 = CALC_FERRAILLAGE(RESULTAT = RESUELU, reuse = RESUELU,
                            CODIFICATION = 'EC2',
                            TYPE_COMB = 'ELU',
                            INST = ( 1.,2.,3.,4.,5.,6.,7.,8.,9.,10.,11.,12.,13.,14.),
                            AFFE = (_F( TOUT = 'OUI',
                                        TYPE_STRUCTURE = '1D',
                                        FERR_COMP = 'OUI',
                                        C_SUP_Y = 0.04,
                                        C_INF_Y = 0.04,
                                        C_SUP_Z = 0.04,
                                        C_INF_Z = 0.04,
                                        FYK = 500.e6,
                                        EYS = 210.e9,
                                        TYPE_DIAGRAMME = 'B2',
                                        FCK = 35.e6,
                                        GAMMA_S = 1.15,
                                        GAMMA_C = 1.5,
                                        ALPHA_CC = 1.0,
                                        UNITE_CONTRAINTE = 'Pa',
                                        UNITE_DIMENSION = 'm',
                                        RHO_ACIER = 7800.),),);

COMP = ['AYI','AYS','AZI','AZS','AST','ATOT','DNSVOL','CONSTRUC'];
#-----------------------------------------------------
# Tests pour CAS 2
#-----------------------------------------------------
D_ref = [
           [0.00000000000000E+00,  0.00000000000000E+00,  0.00000000000000E+00,  0.00000000000000E+00,  0.00039313435143929656,  0.00000000000000E+00,  10.221493137421712,  0.04657331616717533], #1
           [5.75000000000000E-04,  5.75000000000000E-04,  5.75000000000000E-04,  5.75000000000000E-04,  0.00039313435143929656,  2.30000000000000E-03,  129.82149313742173,  0.31235109394495314], #2
           [5.75000000000000E-04,  5.75000000000000E-04,  5.75000000000000E-04,  5.75000000000000E-04,  0.0004899058841012773,  2.30000000000000E-03,  132.33755298663323,  0.3238152948476425], #3
           [5.18123984855709E-04,  0.00000000000000E+00,  0.00000000000000E+00,  0.00000000000000E+00,  0.00000000000000E+00,  5.18123984855709E-04,  2.69424472124969E+01,  5.98721049166597E-02], #4
           [0.00000000000000E+00,  0.00000000000000E+00,  0.00000000000000E+00,  9.49184236626372E-04,  0.00000000000000E+00,  9.49184236626372E-04,  4.93575803045713E+01,  1.09683511787936E-01], #5
           [0.00000000000000E+00,  6.36136001321168E-04,  0.00000000000000E+00,  0.00000000000000E+00,  0.00000000000000E+00,  6.36136001321168E-04,  3.30790720687007E+01,  7.35090490415572E-02], #6
           [0.00000000000000E+00,  0.00000000000000E+00,  0.00000000000000E+00,  1.06758602612194E-03,  0.00000000000000E+00,  1.06758602612194E-03,  5.55144733583406E+01,  1.23365496351868E-01], #7
           [1.75238095238095E-03,  2.84761904761905E-03,  0.00000000000000E+00,  0.00000000000000E+00,  0.00000000000000E+00,  4.60000000000000E-03,  2.39200000000000E+02,  5.31555555555556E-01], #8
           [1.22170925374224E-03,  0.00000000000000E+00,  0.00000000000000E+00,  3.50145034656051E-03,  0.00000000000000E+00,  4.72315960030275E-03,  2.45604299215743E+02,  5.45787331590540E-01], #9
           [0.00000000000000E+00,  0.00029046384823688,  0.005009663681054633,  0.00000000000000E+00,  0.00000000000000E+00,  0.005300127529291513,  275.6066315231587,  0.6124591811625749], #10
           [0.00000000000000E+00,  7.92390093148825E-04,  0.00000000000000E+00,  0.00000000000000E+00,  0.00000000000000E+00,  7.92390093148825E-04,  4.12042848437389E+01,  9.15650774305309E-02], #11
           [0.00000000000000E+00,  1.43999329534403E-03,  0.00000000000000E+00,  0.00000000000000E+00,  0.00000000000000E+00,  1.43999329534403E-03,  7.48796513578895E+01,  1.66399225239754E-01], #12
           [0.00000000000000E+00,  2.23821169164216E-03,  0.00000000000000E+00,  0.00000000000000E+00,  0.00000000000000E+00,  2.23821169164216E-03,  1.16387007965392E+02,  2.58637795478649E-01], #13           
           [0.00000000000000E+00,  0.0033059684205655054,  0.00000000000000E+00,  0.00000000000000E+00,  0.00039313435143929656,  0.0033059684205655054, 182.13185100682801,  0.4285963336547449], #14
];

D_calc = [
           [0.00000000000000E+00,  0.00000000000000E+00,  0.00000000000000E+00,  0.00000000000000E+00,  0.00039313435143929656,  0.00000000000000E+00,  10.221493137421712,  0.04657331616717533], #1
           [5.75000000000000E-04,  5.75000000000000E-04,  5.75000000000000E-04,  5.75000000000000E-04,  0.00039313435143929656,  2.30000000000000E-03,  129.82149313742173,  0.31235109394495314], #2
           [5.75000000000000E-04,  5.75000000000000E-04,  5.75000000000000E-04,  5.75000000000000E-04,  0.0004899058841012773,  2.30000000000000E-03,  132.33755298663323,  0.3238152948476425], #3
           [5.18123984855709E-04,  0.00000000000000E+00,  0.00000000000000E+00,  0.00000000000000E+00,  0.00000000000000E+00,  5.18123984855709E-04,  2.69424472124969E+01,  5.98721049166597E-02], #4
           [0.00000000000000E+00,  0.00000000000000E+00,  0.00000000000000E+00,  9.49184236626372E-04,  0.00000000000000E+00,  9.49184236626372E-04,  4.93575803045713E+01,  1.09683511787936E-01], #5
           [0.00000000000000E+00,  6.36136001321168E-04,  0.00000000000000E+00,  0.00000000000000E+00,  0.00000000000000E+00,  6.36136001321168E-04,  3.30790720687007E+01,  7.35090490415572E-02], #6
           [0.00000000000000E+00,  0.00000000000000E+00,  0.00000000000000E+00,  1.06758602612194E-03,  0.00000000000000E+00,  1.06758602612194E-03,  5.55144733583406E+01,  1.23365496351868E-01], #7
           [1.75238095238095E-03,  2.84761904761905E-03,  0.00000000000000E+00,  0.00000000000000E+00,  0.00000000000000E+00,  4.60000000000000E-03,  2.39200000000000E+02,  5.31555555555556E-01], #8
           [1.22170925374224E-03,  0.00000000000000E+00,  0.00000000000000E+00,  3.50145034656051E-03,  0.00000000000000E+00,  4.72315960030275E-03,  2.45604299215743E+02,  5.45787331590540E-01], #9
           [0.00000000000000E+00,  0.00029046384823688,  0.005009663681054633,  0.00000000000000E+00,  0.00000000000000E+00,  0.005300127529291513,  275.6066315231587,  0.6124591811625749], #10
           [0.00000000000000E+00,  7.92390093148825E-04,  0.00000000000000E+00,  0.00000000000000E+00,  0.00000000000000E+00,  7.92390093148825E-04,  4.12042848437389E+01,  9.15650774305309E-02], #11
           [0.00000000000000E+00,  1.43999329534403E-03,  0.00000000000000E+00,  0.00000000000000E+00,  0.00000000000000E+00,  1.43999329534403E-03,  7.48796513578895E+01,  1.66399225239754E-01], #12
           [0.00000000000000E+00,  2.23821169164216E-03,  0.00000000000000E+00,  0.00000000000000E+00,  0.00000000000000E+00,  2.23821169164216E-03,  1.16387007965392E+02,  2.58637795478649E-01], #13           
           [0.00000000000000E+00,  0.0033059684205655054,  0.00000000000000E+00,  0.00000000000000E+00,  0.00039313435143929656,  0.0033059684205655054, 182.13185100682801,  0.4285963336547449], #14
];

for j in range(len(D_ref)) :
    for i,ncmp in enumerate(COMP) :
        if (D_ref[j][i] == 0):
            TEST_RESU( RESU = _F( RESULTAT = RESUELU2,
                                  INST = j+1.0,
                                  NOM_CHAM = 'FERRAILLAGE',
                                  NOM_CMP = ncmp,
                                  MAILLE = 'M1',
                                  LEGENDE = 'ELU',
                                  VALE_REFE = D_ref[j][i],
                                  VALE_CALC = D_calc[j][i],
                                  REFERENCE = 'ANALYTIQUE',
                                  ORDRE_GRANDEUR = 1.e-3,
                                  CRITERE = 'ABSOLU'),);
        else: 
            TEST_RESU( RESU = _F( RESULTAT = RESUELU2,
                                  INST = j+1.0,
                                  NOM_CHAM = 'FERRAILLAGE',
                                  NOM_CMP = ncmp,
                                  MAILLE = 'M1',
                                  LEGENDE = 'ELU',
                                  VALE_REFE = D_ref[j][i],
                                  REFERENCE = 'ANALYTIQUE',
                                  PRECISION = 1e-4,
                                  VALE_CALC=D_calc[j][i]),);

# CAS 3 - calcul du ferraillage avec UTIL_COMPR et EPU_CISA :
#------------------------------------------------------------

RESUELU3 = CALC_FERRAILLAGE(RESULTAT = RESUELU, reuse = RESUELU,
                            CODIFICATION = 'EC2',
                            TYPE_COMB = 'ELU',
                            INST = ( 1.,2.,3.,4.,5.,6.,7.,8.,9.,10.,11.,12.,13.,14.),
                            AFFE = (_F( TOUT = 'OUI',
                                        TYPE_STRUCTURE = '1D',
                                        FERR_COMP = 'OUI',
                                        C_SUP_Y = 0.04,
                                        C_INF_Y = 0.04,
                                        C_SUP_Z = 0.04,
                                        C_INF_Z = 0.04,
                                        FYK = 500.e6,
                                        EYS = 210.e9,
                                        TYPE_DIAGRAMME = 'B2',
                                        FCK = 35.e6,
                                        GAMMA_S = 1.15,
                                        GAMMA_C = 1.5,
                                        ALPHA_CC = 1.0,
                                        UNITE_CONTRAINTE = 'Pa',
                                        UNITE_DIMENSION = 'm',
                                        EPURE_CISA = 'OUI',
                                        UTIL_COMPR = 'OUI',
                                        RHO_ACIER = 7800.),),);

COMP = ['AYI','AYS','AZI','AZS','AST','ATOT','DNSVOL','CONSTRUC'];
#-----------------------------------------------------
# Tests pour CAS 3
#-----------------------------------------------------
D_ref = [
           [0.00000000000000E+00,  0.00000000000000E+00,  0.00000000000000E+00,  0.00000000000000E+00  ,0.00000000000000E+00,  0.00000000000000E+00,  0.00000000000000E+00,  0.00000000000000E+00], #1
           [5.75000000000000E-04,  5.75000000000000E-04,  0.0011500410139452873,  5.75000000000000E-04 , 0.00039313435143929656,  0.0028750410139452873,  159.72362586257665, 0.3788002777786308], #2
           [6.80089080403987E-04,  6.80089080403987E-04,  1.25513009434927E-03,  6.80089080403987E-04 , 0.0004899058841012773,  3.29539733556124E-03,  184.09821443581748, 0.43883898695694085], #3
           [5.18123984855709E-04,  0.00000000000000E+00,  0.00000000000000E+00,  0.00000000000000E+00 , 0.00000000000000E+00,  5.18123984855709E-04,  2.69424472124969E+01,  5.98721049166597E-02], #4
           [0.00000000000000E+00,  0.00000000000000E+00,  0.00000000000000E+00,  9.49184236626372E-04 , 0.00000000000000E+00,  9.49184236626372E-04,  4.93575803045713E+01,  1.09683511787936E-01], #5
           [0.00000000000000E+00,  6.36136001321168E-04,  0.00000000000000E+00 , 0.00000000000000E+00 , 0.00000000000000E+00,  6.36136001321168E-04,  3.30790720687007E+01,  7.35090490415572E-02], #6
           [0.00000000000000E+00,  0.00000000000000E+00,  0.00000000000000E+00,  1.06758602612194E-03 , 0.00000000000000E+00,  1.06758602612194E-03,  5.55144733583406E+01,  1.23365496351868E-01], #7
           [1.75238095238095E-03,  2.84761904761905E-03,  0.00000000000000E+00,  0.00000000000000E+00 , 0.00000000000000E+00,  4.60000000000000E-03,  2.39200000000000E+02,  5.31555555555556E-01], #8
           [1.22170925374224E-03,  0.00000000000000E+00,  0.00000000000000E+00,  3.50145034656051E-03 , 0.00000000000000E+00,  4.72315960030275E-03,  2.45604299215743E+02 , 5.45787331590540E-01], #9
           [0.00000000000000E+00,  0.00029046384823688,  0.005009663681054633,  0.00000000000000E+00,  0.00000000000000E+00,  0.005300127529291513,  275.6066315231587,  0.6124591811625749], #10
           [0.00000000000000E+00,  7.92390093148825E-04,  0.00000000000000E+00,  0.00000000000000E+00,  0.00000000000000E+00,  7.92390093148825E-04,  4.12042848437389E+01,  9.15650774305309E-02], #11
           [0.00000000000000E+00,  1.43999329534403E-03,  0.00000000000000E+00,  0.00000000000000E+00,  0.00000000000000E+00,  1.43999329534403E-03,  7.48796513578895E+01,  1.66399225239754E-01], #12
           [0.00000000000000E+00,  2.23821169164216E-03,  0.00000000000000E+00 , 0.00000000000000E+00,  0.00000000000000E+00,  2.23821169164216E-03,  1.16387007965392E+02,  2.58637795478649E-01], #13
           [0.00000000000000E+00,  0.0033059684205655054,  0.00000000000000E+00,  0.00000000000000E+00,  0.00000000000000E+00,  0.0033059684205655054,  171.91035786940628,  0.38202301748756956], #14
];

D_calc = [
           [0.00000000000000E+00,  0.00000000000000E+00,  0.00000000000000E+00,  0.00000000000000E+00  ,0.00000000000000E+00,  0.00000000000000E+00,  0.00000000000000E+00,  0.00000000000000E+00], #1
           [5.75000000000000E-04,  5.75000000000000E-04,  0.0011500410139452873,  5.75000000000000E-04 , 0.00039313435143929656,  0.0028750410139452873,  159.72362586257665, 0.3788002777786308], #2
           [6.80089080403987E-04,  6.80089080403987E-04,  1.25513009434927E-03,  6.80089080403987E-04 , 0.0004899058841012773,  3.29539733556124E-03,  184.09821443581748, 0.43883898695694085], #3
           [5.18123984855709E-04,  0.00000000000000E+00,  0.00000000000000E+00,  0.00000000000000E+00 , 0.00000000000000E+00,  5.18123984855709E-04,  2.69424472124969E+01,  5.98721049166597E-02], #4
           [0.00000000000000E+00,  0.00000000000000E+00,  0.00000000000000E+00,  9.49184236626372E-04 , 0.00000000000000E+00,  9.49184236626372E-04,  4.93575803045713E+01,  1.09683511787936E-01], #5
           [0.00000000000000E+00,  6.36136001321168E-04,  0.00000000000000E+00 , 0.00000000000000E+00 , 0.00000000000000E+00,  6.36136001321168E-04,  3.30790720687007E+01,  7.35090490415572E-02], #6
           [0.00000000000000E+00,  0.00000000000000E+00,  0.00000000000000E+00,  1.06758602612194E-03 , 0.00000000000000E+00,  1.06758602612194E-03,  5.55144733583406E+01,  1.23365496351868E-01], #7
           [1.75238095238095E-03,  2.84761904761905E-03,  0.00000000000000E+00,  0.00000000000000E+00 , 0.00000000000000E+00,  4.60000000000000E-03,  2.39200000000000E+02,  5.31555555555556E-01], #8
           [1.22170925374224E-03,  0.00000000000000E+00,  0.00000000000000E+00,  3.50145034656051E-03 , 0.00000000000000E+00,  4.72315960030275E-03,  2.45604299215743E+02 , 5.45787331590540E-01], #9
           [0.00000000000000E+00,  0.00029046384823688,  0.005009663681054633,  0.00000000000000E+00,  0.00000000000000E+00,  0.005300127529291513,  275.6066315231587,  0.6124591811625749], #10
           [0.00000000000000E+00,  7.92390093148825E-04,  0.00000000000000E+00,  0.00000000000000E+00,  0.00000000000000E+00,  7.92390093148825E-04,  4.12042848437389E+01,  9.15650774305309E-02], #11
           [0.00000000000000E+00,  1.43999329534403E-03,  0.00000000000000E+00,  0.00000000000000E+00,  0.00000000000000E+00,  1.43999329534403E-03,  7.48796513578895E+01,  1.66399225239754E-01], #12
           [0.00000000000000E+00,  2.23821169164216E-03,  0.00000000000000E+00 , 0.00000000000000E+00,  0.00000000000000E+00,  2.23821169164216E-03,  1.16387007965392E+02,  2.58637795478649E-01], #13
           [0.00000000000000E+00,  0.0033059684205655054,  0.00000000000000E+00,  0.00000000000000E+00,  0.00000000000000E+00,  0.0033059684205655054,  171.91035786940628,  0.38202301748756956], #14
];

for j in range(len(D_ref)) :
    for i,ncmp in enumerate(COMP) :
        if (D_ref[j][i] == 0):
            TEST_RESU( RESU = _F( RESULTAT = RESUELU3,
                                  INST = j+1.0,
                                  NOM_CHAM = 'FERRAILLAGE',
                                  NOM_CMP = ncmp,
                                  MAILLE = 'M1',
                                  LEGENDE = 'ELU',
                                  VALE_REFE = D_ref[j][i],
                                  VALE_CALC = D_calc[j][i],
                                  REFERENCE = 'ANALYTIQUE',
                                  ORDRE_GRANDEUR = 1.e-3,
                                  CRITERE = 'ABSOLU'),);
        else: 
            TEST_RESU( RESU = _F( RESULTAT = RESUELU3,
                                  INST = j+1.0,
                                  NOM_CHAM = 'FERRAILLAGE',
                                  NOM_CMP = ncmp,
                                  MAILLE = 'M1',
                                  LEGENDE = 'ELU',
                                  VALE_REFE = D_ref[j][i],
                                  REFERENCE = 'ANALYTIQUE',
                                  PRECISION = 1e-4,
                                  VALE_CALC=D_calc[j][i]),);

# CAS 4 - calcul du ferraillage avec FERR_SYME = 'OUI' :
#-------------------------------------------------------

RESUELU4 = CALC_FERRAILLAGE(RESULTAT = RESUELU, reuse = RESUELU,
                            CODIFICATION = 'EC2',
                            TYPE_COMB = 'ELU',
                            INST = ( 1.,2.,3.,4.,5.,6.,7.,8.,9.,10.,11.,12.,13.,14.),
                            AFFE = (_F( TOUT = 'OUI',
                                        TYPE_STRUCTURE = '1D',
                                        FERR_COMP = 'OUI',
                                        FERR_SYME = 'OUI',
                                        SEUIL_SYME = 1.e-4,
                                        C_SUP_Y = 0.04,
                                        C_INF_Y = 0.04,
                                        C_SUP_Z = 0.04,
                                        C_INF_Z = 0.04,
                                        FYK = 500.e6,
                                        EYS = 210.e9,
                                        TYPE_DIAGRAMME = 'B2',
                                        FCK = 35.e6,
                                        GAMMA_S = 1.15,
                                        GAMMA_C = 1.5,
                                        ALPHA_CC = 1.0,
                                        UNITE_CONTRAINTE = 'Pa',
                                        UNITE_DIMENSION = 'm',
                                        UTIL_COMPR = 'OUI',
                                        RHO_ACIER = 7800.),),);

COMP = ['AYI','AYS','AZI','AZS','AST','ATOT','DNSVOL','CONSTRUC'];
#-----------------------------------------------------
# Tests pour CAS 4
#-----------------------------------------------------
D_ref = [
           [0.00000000000000E+00,  0.00000000000000E+00,  0.00000000000000E+00,  0.00000000000000E+00,  0.00000000000000E+00,  0.00000000000000E+00,  0.00000000000000E+00,  0.00000000000000E+00], #1
           [5.75000000000000E-04,  5.75000000000000E-04,  5.75000000000000E-04,  5.75000000000000E-04,  0.00039313435143929656,  2.30000000000000E-03,  129.82149313742173,  0.31235109394495314], #2
           [5.75000000000000E-04,  5.75000000000000E-04,  5.75000000000000E-04,  5.75000000000000E-04,  0.0004899058841012773,  2.30000000000000E-03,  132.33755298663323,  0.3238152948476425], #3
           [-1.00000000000000E+00, -1.00000000000000E+00, -1.00000000000000E+00, -1.00000000000000E+00, -1.00000000000000E+00, -1.00000000000000E+00,  -1.00000000000000E+00, -1.00000000000000E+00], #4
           [0.00000000000000E+00,  0.00000000000000E+00,  9.92345566007752E-04,  9.52373314956710E-04,  0.00000000000000E+00,  1.94471888096446E-03,  1.01125381810152E+02,  2.24723070689227E-01], #5
           [6.54243547919509E-04,  6.34289834496598E-04,  0.00000000000000E+00,  0.00000000000000E+00,  0.00000000000000E+00,  1.28853338241611E-03,  6.70037358856376E+01,  1.48897190856973E-01], #6
           [0.00000000000000E+00,  0.00000000000000E+00,  9.71397521440522E-04,  1.06851711076479E-03,  0.00000000000000E+00,  2.03991463220531E-03,  1.06075560874676E+02,  2.35723468610392E-01], #7
           [2.73353807119486E-03,  2.82629872146289E-03,  0.00000000000000E+00,  0.00000000000000E+00,  0.00000000000000E+00,  5.55983679265775E-03,  2.89111513218203E+02,  6.42470029373784E-01], #8
           [-1.00000000000000E+00, -1.00000000000000E+00, -1.00000000000000E+00, -1.00000000000000E+00, -1.00000000000000E+00, -1.00000000000000E+00,  -1.00000000000000E+00, -1.00000000000000E+00], #9
           [0.00000000000000E+00,  0.00024005276713791736,  0.004168250962457083, 0.0039305036289503, 0.00000000000000E+00, 0.008338807358545301,  433.6179826443557, 0.9635955169874572], #10
           [7.22279749442869E-04,  7.91605336353741E-04,  0.00000000000000E+00,  0.00000000000000E+00,  0.00000000000000E+00,  1.51388508579661E-03,  7.87220244614237E+01,  1.74937832136497E-01], #11
           [1.32721935176755E-03,  1.39490133278231E-03,  0.00000000000000E+00,  0.00000000000000E+00,  0.00000000000000E+00,  2.72212068454986E-03,  1.41550275596593E+02,  3.14556167992429E-01], #12
           [1.96201959581577E-03,  2.05417273118367E-03,  0.00000000000000E+00,  0.00000000000000E+00,  0.00000000000000E+00,  4.01619232699944E-03,  2.08842001003971E+02,  4.64093335564380E-01], #13
           [3.36799036445412E-03,  3.34438405108982E-03,  0.00000000000000E+00,  0.00000000000000E+00,  0.00000000000000E+00,  6.71237441554394E-03,  3.49043469608285E+02,  7.75652154685078E-01], #14
];

D_calc = [
           [0.00000000000000E+00,  0.00000000000000E+00,  0.00000000000000E+00,  0.00000000000000E+00,  0.00000000000000E+00,  0.00000000000000E+00,  0.00000000000000E+00,  0.00000000000000E+00], #1
           [5.75000000000000E-04,  5.75000000000000E-04,  5.75000000000000E-04,  5.75000000000000E-04,  0.00039313435143929656,  2.30000000000000E-03,  129.82149313742173,  0.31235109394495314], #2
           [5.75000000000000E-04,  5.75000000000000E-04,  5.75000000000000E-04,  5.75000000000000E-04,  0.0004899058841012773,  2.30000000000000E-03,  132.33755298663323,  0.3238152948476425], #3
           [-1.00000000000000E+00, -1.00000000000000E+00, -1.00000000000000E+00, -1.00000000000000E+00, -1.00000000000000E+00, -1.00000000000000E+00,  -1.00000000000000E+00, -1.00000000000000E+00], #4
           [0.00000000000000E+00,  0.00000000000000E+00,  9.92345566007752E-04,  9.52373314956710E-04,  0.00000000000000E+00,  1.94471888096446E-03,  1.01125381810152E+02,  2.24723070689227E-01], #5
           [6.54243547919509E-04,  6.34289834496598E-04,  0.00000000000000E+00,  0.00000000000000E+00,  0.00000000000000E+00,  1.28853338241611E-03,  6.70037358856376E+01,  1.48897190856973E-01], #6
           [0.00000000000000E+00,  0.00000000000000E+00,  9.71397521440522E-04,  1.06851711076479E-03,  0.00000000000000E+00,  2.03991463220531E-03,  1.06075560874676E+02,  2.35723468610392E-01], #7
           [2.73353807119486E-03,  2.82629872146289E-03,  0.00000000000000E+00,  0.00000000000000E+00,  0.00000000000000E+00,  5.55983679265775E-03,  2.89111513218203E+02,  6.42470029373784E-01], #8
           [-1.00000000000000E+00, -1.00000000000000E+00, -1.00000000000000E+00, -1.00000000000000E+00, -1.00000000000000E+00, -1.00000000000000E+00,  -1.00000000000000E+00, -1.00000000000000E+00], #9
           [0.00000000000000E+00,  0.00024005276713791736,  0.004168250962457083, 0.0039305036289503, 0.00000000000000E+00, 0.008338807358545301,  433.6179826443557, 0.9635955169874572], #10
           [7.22279749442869E-04,  7.91605336353741E-04,  0.00000000000000E+00,  0.00000000000000E+00,  0.00000000000000E+00,  1.51388508579661E-03,  7.87220244614237E+01,  1.74937832136497E-01], #11
           [1.32721935176755E-03,  1.39490133278231E-03,  0.00000000000000E+00,  0.00000000000000E+00,  0.00000000000000E+00,  2.72212068454986E-03,  1.41550275596593E+02,  3.14556167992429E-01], #12
           [1.96201959581577E-03,  2.05417273118367E-03,  0.00000000000000E+00,  0.00000000000000E+00,  0.00000000000000E+00,  4.01619232699944E-03,  2.08842001003971E+02,  4.64093335564380E-01], #13
           [3.36799036445412E-03,  3.34438405108982E-03,  0.00000000000000E+00,  0.00000000000000E+00,  0.00000000000000E+00,  6.71237441554394E-03,  3.49043469608285E+02,  7.75652154685078E-01], #14
];

for j in range(len(D_ref)) :
    for i,ncmp in enumerate(COMP) :
        if (D_ref[j][i] == 0):
            TEST_RESU( RESU = _F( RESULTAT = RESUELU4,
                                  INST = j+1.0,
                                  NOM_CHAM = 'FERRAILLAGE',
                                  NOM_CMP = ncmp,
                                  MAILLE = 'M1',
                                  LEGENDE = 'ELU',
                                  VALE_REFE = D_ref[j][i],
                                  VALE_CALC = D_calc[j][i],
                                  REFERENCE = 'ANALYTIQUE',
                                  ORDRE_GRANDEUR = 1.e-3,
                                  CRITERE = 'ABSOLU'),);
        else: 
            TEST_RESU( RESU = _F( RESULTAT = RESUELU4,
                                  INST = j+1.0,
                                  NOM_CHAM = 'FERRAILLAGE',
                                  NOM_CMP = ncmp,
                                  MAILLE = 'M1',
                                  LEGENDE = 'ELU',
                                  VALE_REFE = D_ref[j][i],
                                  REFERENCE = 'ANALYTIQUE',
                                  PRECISION = 1e-4,
                                  VALE_CALC=D_calc[j][i]),);

# CAS 5 - calcul du ferraillage avec CODIFICATION = 'BAEL91' :
#-------------------------------------------------------------

RESUELU5 = CALC_FERRAILLAGE(RESULTAT = RESUELU, reuse = RESUELU,
                            CODIFICATION = 'BAEL91',
                            TYPE_COMB = 'ELU',
                            INST = ( 1.,2.,3.,4.,5.,6.,7.,8.,9.,10.,11.,12.,13.,14.),
                            AFFE = (_F( TOUT = 'OUI',
                                        TYPE_STRUCTURE = '1D',
                                        FERR_COMP = 'OUI',
                                        C_SUP_Y = 0.04,
                                        C_INF_Y = 0.04,
                                        C_SUP_Z = 0.04,
                                        C_INF_Z = 0.04,
                                        FE = 500.e6,
                                        EYS = 210.e9,
                                        TYPE_DIAGRAMME = 'B2',
                                        FCJ = 35.e6,
                                        GAMMA_S = 1.15,
                                        GAMMA_C = 1.5,
                                        ALPHA_CC = 1.0,
                                        UNITE_CONTRAINTE = 'Pa',
                                        UNITE_DIMENSION = 'm',
                                        RHO_ACIER = 7800.),),);

COMP = ['AYI','AYS','AZI','AZS','AST','ATOT','DNSVOL','CONSTRUC'];
#-----------------------------------------------------
# Tests pour CAS 5
#-----------------------------------------------------
D_ref = [
           [0.00000000000000E+00,  0.00000000000000E+00,  0.00000000000000E+00,  0.00000000000000E+00,  0.0017692307692307693,  0.00000000000000E+00,  46.00000000000001,  0.2095948717948718], #1
           [5.75000000000000E-04,  5.75000000000000E-04,  5.75000000000000E-04,  5.75000000000000E-04,  0.0017692307692307693,  2.30000000000000E-03,  165.6,  0.4753726495726496], #2
           [5.75000000000000E-04,  5.75000000000000E-04,  5.75000000000000E-04,  5.75000000000000E-04,  0.00198698224852071,  2.30000000000000E-03,  171.26153846153846,  0.5011689414858645], #3
           [5.18123984855709E-04,  0.00000000000000E+00,  0.00000000000000E+00,  0.00000000000000E+00,  0.00000000000000E+00,  5.18123984855709E-04,  2.69424472124969E+01,  5.98721049166597E-02], #4
           [0.00000000000000E+00,  0.00000000000000E+00,  0.00000000000000E+00,  9.49184236626372E-04,  0.00000000000000E+00,  9.49184236626372E-04,  4.93575803045713E+01,  1.09683511787936E-01], #5
           [0.00000000000000E+00,  6.36136001321168E-04,  0.00000000000000E+00,  0.00000000000000E+00,  0.00000000000000E+00,  6.36136001321168E-04,  3.30790720687007E+01,  7.35090490415572E-02], #6
           [0.00000000000000E+00,  0.00000000000000E+00,  0.00000000000000E+00,  1.06758602612194E-03,  0.00000000000000E+00,  1.06758602612194E-03,  5.55144733583406E+01,  1.23365496351868E-01], #7
           [1.75238095238095E-03,  2.84761904761905E-03,  0.00000000000000E+00,  0.00000000000000E+00,  0.00000000000000E+00,  4.60000000000000E-03,  2.39200000000000E+02,  5.31555555555556E-01], #8
           [1.22170925374224E-03,  0.00000000000000E+00,  0.00000000000000E+00,  3.50145034656051E-03,  0.00000000000000E+00,  4.72315960030275E-03,  2.45604299215743E+02,  5.45787331590540E-01], #9
           [0.00000000000000E+00,  0.00029046384823688,  0.005009663681054633,  0.00000000000000E+00,  0.00000000000000E+00,  0.005300127529291513,  275.6066315231587,  0.6124591811625749], #10
           [0.00000000000000E+00,  7.92390093148825E-04,  0.00000000000000E+00,  0.00000000000000E+00,  0.00000000000000E+00,  7.92390093148825E-04,  4.12042848437389E+01,  9.15650774305309E-02], #11
           [0.00000000000000E+00,  1.43999329534403E-03,  0.00000000000000E+00,  0.00000000000000E+00,  0.00000000000000E+00,  1.43999329534403E-03,  7.48796513578895E+01,  1.66399225239754E-01], #12
           [0.00000000000000E+00,  2.23821169164216E-03,  0.00000000000000E+00,  0.00000000000000E+00,  0.00000000000000E+00,  2.23821169164216E-03,  1.16387007965392E+02,  2.58637795478649E-01], #13
           [0.00000000000000E+00,  0.0033059684205655054,  0.00000000000000E+00,  0.00000000000000E+00, 0.0017692307692307693,  0.0033059684205655054,  217.9103578694063,  0.5916178892824414], #14
];

D_calc = [
           [0.00000000000000E+00,  0.00000000000000E+00,  0.00000000000000E+00,  0.00000000000000E+00,  0.0017692307692307693,  0.00000000000000E+00,  46.00000000000001,  0.2095948717948718], #1
           [5.75000000000000E-04,  5.75000000000000E-04,  5.75000000000000E-04,  5.75000000000000E-04,  0.0017692307692307693,  2.30000000000000E-03,  165.6,  0.4753726495726496], #2
           [5.75000000000000E-04,  5.75000000000000E-04,  5.75000000000000E-04,  5.75000000000000E-04,  0.00198698224852071,  2.30000000000000E-03,  171.26153846153846,  0.5011689414858645], #3
           [5.18123984855709E-04,  0.00000000000000E+00,  0.00000000000000E+00,  0.00000000000000E+00,  0.00000000000000E+00,  5.18123984855709E-04,  2.69424472124969E+01,  5.98721049166597E-02], #4
           [0.00000000000000E+00,  0.00000000000000E+00,  0.00000000000000E+00,  9.49184236626372E-04,  0.00000000000000E+00,  9.49184236626372E-04,  4.93575803045713E+01,  1.09683511787936E-01], #5
           [0.00000000000000E+00,  6.36136001321168E-04,  0.00000000000000E+00,  0.00000000000000E+00,  0.00000000000000E+00,  6.36136001321168E-04,  3.30790720687007E+01,  7.35090490415572E-02], #6
           [0.00000000000000E+00,  0.00000000000000E+00,  0.00000000000000E+00,  1.06758602612194E-03,  0.00000000000000E+00,  1.06758602612194E-03,  5.55144733583406E+01,  1.23365496351868E-01], #7
           [1.75238095238095E-03,  2.84761904761905E-03,  0.00000000000000E+00,  0.00000000000000E+00,  0.00000000000000E+00,  4.60000000000000E-03,  2.39200000000000E+02,  5.31555555555556E-01], #8
           [1.22170925374224E-03,  0.00000000000000E+00,  0.00000000000000E+00,  3.50145034656051E-03,  0.00000000000000E+00,  4.72315960030275E-03,  2.45604299215743E+02,  5.45787331590540E-01], #9
           [0.00000000000000E+00,  0.00029046384823688,  0.005009663681054633,  0.00000000000000E+00,  0.00000000000000E+00,  0.005300127529291513,  275.6066315231587,  0.6124591811625749], #10
           [0.00000000000000E+00,  7.92390093148825E-04,  0.00000000000000E+00,  0.00000000000000E+00,  0.00000000000000E+00,  7.92390093148825E-04,  4.12042848437389E+01,  9.15650774305309E-02], #11
           [0.00000000000000E+00,  1.43999329534403E-03,  0.00000000000000E+00,  0.00000000000000E+00,  0.00000000000000E+00,  1.43999329534403E-03,  7.48796513578895E+01,  1.66399225239754E-01], #12
           [0.00000000000000E+00,  2.23821169164216E-03,  0.00000000000000E+00,  0.00000000000000E+00,  0.00000000000000E+00,  2.23821169164216E-03,  1.16387007965392E+02,  2.58637795478649E-01], #13
           [0.00000000000000E+00,  0.0033059684205655054,  0.00000000000000E+00,  0.00000000000000E+00, 0.0017692307692307693,  0.0033059684205655054,  217.9103578694063,  0.5916178892824414], #14
];

for j in range(len(D_ref)) :
    for i,ncmp in enumerate(COMP) :
        if (D_ref[j][i] == 0):
            TEST_RESU( RESU = _F( RESULTAT = RESUELU5,
                                  INST = j+1.0,
                                  NOM_CHAM = 'FERRAILLAGE',
                                  NOM_CMP = ncmp,
                                  MAILLE = 'M1',
                                  LEGENDE = 'ELU',
                                  VALE_REFE = D_ref[j][i],
                                  VALE_CALC = D_calc[j][i],
                                  REFERENCE = 'ANALYTIQUE',
                                  ORDRE_GRANDEUR = 1.e-3,
                                  CRITERE = 'ABSOLU'),);
        else: 
            TEST_RESU( RESU = _F( RESULTAT = RESUELU5,
                                  INST = j+1.0,
                                  NOM_CHAM = 'FERRAILLAGE',
                                  NOM_CMP = ncmp,
                                  MAILLE = 'M1',
                                  LEGENDE = 'ELU',
                                  VALE_REFE = D_ref[j][i],
                                  REFERENCE = 'ANALYTIQUE',
                                  PRECISION = 1e-4,
                                  VALE_CALC=D_calc[j][i]),);

FIN()
