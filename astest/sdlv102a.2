import code_aster
from code_aster.Applications.dynamic_substructuring import SubStructure, Structure, Interface

test = code_aster.TestCase()

POURSUITE(CODE='OUI',DEBUG=_F(SDVERI='OUI'))

myStructure = Structure([subS1, subS2],[interface,])

nmodes=6
omega, resuSub = myStructure.computeGlobalModes(nmodes=nmodes)

# for isub,resu in enumerate(resuSub) :
#    resu.printMedFile('/tmp/resu%d.resu.med'%isub)

print("**** Eigen Pulses ****")
print(omega)

ref = [13.58422747+0.j, 25.93127875+0.j, 37.48177452+0.j, 63.65458916+0.j,
 70.38457542+0.j, 74.24372915+0.j]

for idx, val in enumerate(omega):
    test.assertAlmostEqual(val, ref[idx], delta=1.e-2)


FIN()
