import code_aster
from code_aster.Applications.dynamic_substructuring import SubStructure, Structure, Interface

test = code_aster.TestCase()

POURSUITE(CODE='OUI',DEBUG=_F(SDVERI='OUI'))

myStructure = Structure([subS1, subS2],[interface,])

nmodes=6
omega, resuSub = myStructure.computeGlobalModes(nmodes=nmodes)

# for isub,resu in enumerate(resuSub) :
#    resu.printMedFile('/tmp/resu%d.resu.med'%isub)

print("**** Eigen Pulses ****")
print(omega)

ref = [ 14.54542733+0.j,  27.99701576+0.j,  44.29580172+0.j,  76.16987969+0.j,
  82.13327483+0.j, 115.95593236+0.j]

# for idx, val in enumerate(omega):
#     test.assertAlmostEqual(val, ref[idx])
test.assertAlmostEqual(omega[0], ref[0], delta=1.e-5)


FIN()
