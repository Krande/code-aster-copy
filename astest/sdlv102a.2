import code_aster
from code_aster.Applications.dynamic_substructuring import SubStructure, Structure, Interface

test = code_aster.TestCase()

POURSUITE(CODE='OUI',DEBUG=_F(SDVERI='OUI'))

myStructure = Structure([subS1, subS2],[interface,])

nmodes=6
omega, resuSub = myStructure.computeGlobalModes(nmodes=nmodes, shift=25)

# for isub,resu in enumerate(resuSub) :
#    resu.printMedFile('/tmp/resu%d.resu.med'%isub)

print("**** Eigen Pulses ****")
print(omega)

ref = [0.0, 1.37970118e01, 2.89138920e01, 3.95359019e01, 5.85297432e01, 6.15141619e01]

for idx in range(0, nmodes):
    test.assertAlmostEqual(omega[idx], ref[idx], delta=1.0e-2)


FIN()
