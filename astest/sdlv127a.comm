# coding=utf-8
# --------------------------------------------------------------------
# Copyright (C) 1991 - 2023 - EDF R&D - www.code-aster.org
# This file is part of code_aster.
#
# code_aster is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# code_aster is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with code_aster.  If not, see <http://www.gnu.org/licenses/>.
# --------------------------------------------------------------------

# Fichier de commande onde plane inclinee (sur un par.ede de 200 par 400)

DEBUT( CODE=_F(NIV_PUB_WEB='INTERNET',))

'''
PRE_GIBI( );

mail=LIRE_MAILLAGE(FORMAT='ASTER');

mail=DEFI_GROUP(reuse =mail,
                MAILLAGE=mail,
                CREA_GROUP_MA=_F(UNION=('SUG','SUD','SUB'),NOM='SUTOT'), 
                );

mail=DEFI_GROUP(reuse =mail,
                MAILLAGE=mail,
                CREA_GROUP_MA=_F(UNION=('VOLG','VOLD',),NOM='VOLTOT'), 
                );

mail=DEFI_GROUP(reuse =mail,
                MAILLAGE=mail,
                CREA_GROUP_NO=_F(GROUP_MA=('SUF','SUT','SUG','SUD','SUB','SUTOT'),),
                );

mail=MODI_MAILLAGE(reuse =mail,
                MAILLAGE=mail,
                ORIE_PEAU=_F(GROUP_MA_PEAU=('SULA','SUB'), 
                             GROUP_MA_INTERNE=('VOLTOT', ),),
                );
'''

mail=LIRE_MAILLAGE( );

                                         
#parametre du sol et determination des parametre du modele d'interaction sol-structure
Esol = 30000000000;
Nusol = 0.25;
Msol = 2450.0;


#parametres proches de 1 pour le calcul des raideurs et amortisseurs
alpha = 0.8;
beta = 1.1;

#distance entre le barrage et le bord de la fondation (en ordre de grandeur)
rb = 100;
lcara=((1 + alpha) * 2) * rb

#parametres materiaux du modele

sol=DEFI_MATERIAU(ELAS=_F(E=Esol,
                          NU=Nusol,
                            RHO=Msol,
                               ),);

sol2=DEFI_MATERIAU(ELAS=_F(E=Esol         ,
                          NU=Nusol,
                          RHO=Msol,
                             LONG_CARA=lcara,
                             COEF_AMOR=beta,
                             ),);


# ------------------------------------------------------------
# Définition des modèles
# ------------------------------------------------------------


# ------------------------------------------------------------
# Définition des chargements sur les bords
# ------------------------------------------------------------

from math import *

# Coordonnées du point de départ de l'onde.
#z0=-400.;
z0=-200. ;
x0=0;
x01=-1. ;
x02=-601.;

# Angle d'incidence par rapport à la verticale de propagation de l'onde (0=vertical)
a=21;
#a=0. ;

a2=radians(a);
cosa=cos(a2);
sina=sin(a2);

# Calcul du rapport des célérités des ondes de cisaillement (c2) et de compression (c1).
Rc1c2=sqrt(2+2*Nusol/(1-2*Nusol));

# Calcul de l'angle réflexion de l'onde SV réfléchie.
b2=asin(sina/Rc1c2);

cosb2=cos(b2);
sinb2=sin(b2);

# Coefficients de réflexions théoriques (à changer pour chaque valeur d'angle (voir Excel)).
#RA12=-0.805050623;
#RA13=0.762626991;

# Coefficients de réflexions (Calcul intégré au script).
k=1/Rc1c2
N=(k)**2*sin(2*b2)*sin(2*a2)+cos(2*b2)**2

RA12=(k**2*sin(2*a2)*sin(2*b2)-cos(2*b2)**2)/N
RA13=2*k*sin(2*a2)*cos(2*b2)/N

# Calcul des bons paramètres dist à insérer dans le calcul.
dist=x0*sina+z0*cosa;
dist2=x0*sina+(-z0)*(-cosa);

zsv=cosb2*(-z0)/Rc1c2/cosa;
xsv=(sina/cosa)*(-z0)-sinb2*(-z0)/Rc1c2/cosa;

dist3=xsv*sinb2+zsv*(-cosb2);

# Sollicitation en acceleration
#INCLUDE(UNITE=38,);

LINST=DEFI_LIST_REEL(DEBUT=0.0,
                     INTERVALLE=_F(JUSQU_A=0.3, #1,
                                   PAS=0.002,),);

acce_0 = DEFI_FONCTION(
                        NOM_RESU= 'ACCE',
                        NOM_PARA= 'INST',
                        PROL_GAUCHE= 'CONSTANT',
                        PROL_DROITE= 'CONSTANT',
                        VALE=(
0, 0, 
0.014, 0, 
0.016, 0.0117113321616078, 
0.018, 0.0234226643232156, 
0.02, 0.0468453286464312, 
0.022, 0.0936906572928623, 
0.024, 0.187381314585725, 
0.026, 0.368124552684678, 
0.028, 0.535826794978997, 
0.03, 0.684547105928689, 
0.032, 0.809016994374947, 
0.034, 0.90482705246602, 
0.036, 0.968583161128631, 
0.038, 0.998026728428272, 
0.04, 0.992114701314478, 
0.042, 0.951056516295154, 
0.044, 0.876306680043864, 
0.046, 0.770513242775789, 
0.048, 0.63742398974869, 
0.05, 0.481753674101716, 
0.052, 0.309016994374948, 
0.054, 0.125333233564304, 
0.056, -0.0627905195293133, 
0.058, -0.248689887164854, 
0.06, -0.425779291565073, 
0.062, -0.587785252292473, 
0.064, -0.728968627421412, 
0.066, -0.844327925502015, 
0.068, -0.929776485888251, 
0.07, -0.982287250728689, 
0.072, -1, 
0.074, -0.982287250728689, 
0.076, -0.929776485888252, 
0.078, -0.844327925502016, 
0.08, -0.728968627421412, 
0.082, -0.587785252292473, 
0.084, -0.425779291565073, 
0.086, -0.248689887164854, 
0.088, -0.124344943582427, 
0.09, -0.0621724717912136, 
0.092, -0.0310862358956068, 
0.094, -0.0155431179478034, 
0.096, 0, 
),),

'''
ACCF=FORMULE(NOM_PARA='INST', acce_0=acce_0,
             VALE='acce_0(INST+0.2)')
            
acce_1=CALC_FONC_INTERP(FONCTION=ACCF, NOM_PARA = 'INST',
                        PROL_DROITE='CONSTANT',
                        PROL_GAUCHE='CONSTANT',
                        LIST_PARA=LINST);
'''

acce_1=CALC_FONCTION(COMB=_F(FONCTION=acce_0,
                             COEF=1.0,),LIST_PARA=LINST);


vite_1=CALC_FONCTION(INTEGRE=_F(FONCTION=acce_1,),);
depl_1=CALC_FONCTION(INTEGRE=_F(FONCTION=vite_1,),);

CHMAT=AFFE_MATERIAU(MAILLAGE=mail,
                    AFFE=(
                          _F(GROUP_MA=('VOLG','VOLD'),
                             MATER=sol,),
                          _F(GROUP_MA=('SULA','SUB',),
                             MATER=sol),
                 ),);

# ------------------------------------------------------------
# Définition des modèles
# ------------------------------------------------------------

# Modèle avec surface libre
MODELE=AFFE_MODELE(MAILLAGE=mail,
                   AFFE=(_F(GROUP_MA=('VOLG','VOLD'),
                            PHENOMENE='MECANIQUE',
                            MODELISATION='3D',),
                         _F(GROUP_MA=('SUG','SUD','SUB',),
                            PHENOMENE='MECANIQUE',
                            MODELISATION='3D_ABSO',),
                ),);

LIAISON = AFFE_CHAR_MECA(MODELE=MODELE,
                               LIAISON_GROUP=
                              (_F(GROUP_NO_1='SUF',
                                  GROUP_NO_2='SUT',
                                  DDL_1=('DX',),
                                  DDL_2=('DX',),
                                  COEF_MULT_1=1.,
                                  COEF_MULT_2=-1.,
                                  COEF_IMPO=0.,),
                               _F(GROUP_NO_1='SUF',
                                  GROUP_NO_2='SUT',
                                     DDL_1=('DY',),
                                     DDL_2=('DY',),
                                     COEF_MULT_1 = 1.,
                                     COEF_MULT_2 = -1.,
                                     COEF_IMPO = 0.,),
                               _F(GROUP_NO_1='SUF',
                                  GROUP_NO_2='SUT',
                                     DDL_1=('DZ',),
                                     DDL_2=('DZ',),
                                     COEF_MULT_1 = 1.,
                                     COEF_MULT_2 = -1.,
                                     COEF_IMPO = 0.,),
                               ),
                          );

                
ASSEMBLAGE(MODELE=MODELE,
           CHAM_MATER=CHMAT,
           CHARGE=LIAISON,
           #CARA_ELEM=ELEM,
           NUME_DDL=CO('NUMEDDL'),
           MATR_ASSE=(_F(MATRICE=CO('RIGI'),
                         OPTION='RIGI_MECA',),
                      _F(MATRICE=CO('MASSE'),
                         OPTION='MASS_MECA',),
                      _F(MATRICE=CO('AMOR'),
                         OPTION='AMOR_MECA',),),);


#Chargement P incident
ONDEP=AFFE_CHAR_MECA_F(MODELE=MODELE,
                         ONDE_PLANE=_F(DIRECTION=(sina,0.000,cosa),
                                     TYPE_ONDE='P',
                                     FONC_SIGNAL=vite_1,
                                     DIST=dist,
                                     DIST_REFLECHI=0.0,
                                     DEPL_IMPO=depl_1,
                                     GROUP_MA=('SUB','SUD','SUG'),

                                     ),
                       );


# onde SV 
ONDESV=AFFE_CHAR_MECA_F(MODELE=MODELE,
                       ONDE_PLANE=_F(DIRECTION=(sina,0.000,cosa),
                                     TYPE_ONDE='SV',
                                     FONC_SIGNAL=vite_1,
                                     DIST=dist,
                                     DIST_REFLECHI=0.0,
                                     DEPL_IMPO=depl_1,
                                     GROUP_MA=('SUG','SUD','SUB',),
                                     ),
                     );

# Résultats avec ondes réfléchies
ResuP=DYNA_VIBRA(BASE_CALCUL='PHYS',
                 TYPE_CALCUL='TRAN',
                 MODELE=MODELE,
                 MATR_MASS=MASSE,
                 MATR_RIGI=RIGI,
                 MATR_AMOR=AMOR,
                 SCHEMA_TEMPS=_F(SCHEMA='NEWMARK',),
                 INCREMENT=_F(LIST_INST=LINST,),
                 ARCHIVAGE=_F(LIST_INST=LINST,),
                 EXCIT=(
                        _F(CHARGE=ONDEP,),
                       ),);


accxc= CALC_FONCTION( COMB=_F( FONCTION = acce_1, COEF = 1.0),
                      LIST_PARA=LINST);


azNGH = RECU_FONCTION( RESULTAT= ResuP, GROUP_NO='NGH', 
                      NOM_CHAM= 'ACCE',
                      INTERPOL='LIN',
                      PROL_DROITE='CONSTANT',PROL_GAUCHE='CONSTANT',
                      LIST_INST=LINST,
                         NOM_CMP='DZ');

azNMH = RECU_FONCTION( RESULTAT= ResuP, GROUP_NO='NMH',
                      NOM_CHAM= 'ACCE',
                      INTERPOL='LIN',
                      PROL_DROITE='CONSTANT',PROL_GAUCHE='CONSTANT',
                      LIST_INST=LINST,
                         NOM_CMP='DZ');

azNDH = RECU_FONCTION( RESULTAT= ResuP, GROUP_NO='NDH', 
                      NOM_CHAM= 'ACCE',
                      INTERPOL='LIN',
                      PROL_DROITE='CONSTANT',PROL_GAUCHE='CONSTANT',
                      LIST_INST=LINST,
                         NOM_CMP='DZ');

azNGB = RECU_FONCTION( RESULTAT= ResuP, GROUP_NO='NGB', 
                      NOM_CHAM= 'ACCE',
                      INTERPOL='LIN',
                      PROL_DROITE='CONSTANT',PROL_GAUCHE='CONSTANT',
                      LIST_INST=LINST,
                         NOM_CMP='DZ');

azNMB = RECU_FONCTION( RESULTAT= ResuP, GROUP_NO='NMB', 
                      NOM_CHAM= 'ACCE',
                      INTERPOL='LIN',
                      PROL_DROITE='CONSTANT',PROL_GAUCHE='CONSTANT',
                      LIST_INST=LINST,
                         NOM_CMP='DZ');

azNDB = RECU_FONCTION( RESULTAT= ResuP, GROUP_NO='NDB', 
                      NOM_CHAM= 'ACCE',
                      INTERPOL='LIN',
                      PROL_DROITE='CONSTANT',PROL_GAUCHE='CONSTANT',
                      LIST_INST=LINST,
                         NOM_CMP='DZ');

TEST_FONCTION(VALEUR=(
                      _F(VALE_CALC=0.93204350,
                         VALE_REFE=0.93358043,
                         PRECISION=2.0E-3,
                         REFERENCE='ANALYTIQUE',
                         CRITERE='RELATIF',
                         VALE_PARA=0.038,
                         FONCTION=azNGB,),
                      _F(VALE_CALC=0.93165082,
                         VALE_REFE=0.93358043,
                         PRECISION=3.0E-3,
                         REFERENCE='ANALYTIQUE',
                         CRITERE='RELATIF',
                         VALE_PARA=0.058,
                         FONCTION=azNMB,),
                      _F(VALE_CALC=0.93404739,
                         VALE_REFE=0.93358043,
                         PRECISION=1.0E-3,
                         REFERENCE='ANALYTIQUE',
                         CRITERE='RELATIF',
                         VALE_PARA=0.076,
                         FONCTION=azNDB,),
                      _F(VALE_CALC=1.8559799,
                         VALE_REFE=1.8671609,
                         PRECISION=7.0E-3,
                         REFERENCE='ANALYTIQUE',
                         CRITERE='RELATIF',
                         VALE_PARA=0.088,
                         FONCTION=azNGH,),
                      _F(VALE_CALC=1.8248818,
                         VALE_REFE=1.8671609,
                         PRECISION=2.4E-2,
                         REFERENCE='ANALYTIQUE',
                         CRITERE='RELATIF',
                         VALE_PARA=0.106,
                         FONCTION=azNMH,),
                      _F(VALE_CALC=1.8231952,
                         VALE_REFE=1.8671609,
                         PRECISION=2.5E-2,
                         REFERENCE='ANALYTIQUE',
                         CRITERE='RELATIF',
                         VALE_PARA=0.126,
                         FONCTION=azNDH,),
                      ),
              )


ResuS=DYNA_VIBRA(BASE_CALCUL='PHYS',
                 TYPE_CALCUL='TRAN',
                 MODELE=MODELE,
                 MATR_MASS=MASSE,
                 MATR_RIGI=RIGI,
                 MATR_AMOR=AMOR,
                 SCHEMA_TEMPS=_F(SCHEMA='NEWMARK',),
                 INCREMENT=_F(LIST_INST=LINST,),
                 ARCHIVAGE=_F(LIST_INST=LINST,),
                 EXCIT=(
                        _F(CHARGE=ONDESV,),
                       ),);


axNGH = RECU_FONCTION( RESULTAT= ResuS, GROUP_NO='NGH', 
                      NOM_CHAM= 'ACCE',
                      INTERPOL='LIN',
                      PROL_DROITE='CONSTANT',PROL_GAUCHE='CONSTANT',
                      LIST_INST=LINST,
                         NOM_CMP='DX');

axNMH = RECU_FONCTION( RESULTAT= ResuS, GROUP_NO='NMH',
                      NOM_CHAM= 'ACCE',
                      INTERPOL='LIN',
                      PROL_DROITE='CONSTANT',PROL_GAUCHE='CONSTANT',
                      LIST_INST=LINST,
                         NOM_CMP='DX');

axNDH = RECU_FONCTION( RESULTAT= ResuS, GROUP_NO='NDH', 
                      NOM_CHAM= 'ACCE',
                      INTERPOL='LIN',
                      PROL_DROITE='CONSTANT',PROL_GAUCHE='CONSTANT',
                      LIST_INST=LINST,
                         NOM_CMP='DX');

axNGB = RECU_FONCTION( RESULTAT= ResuS, GROUP_NO='NGB', 
                      NOM_CHAM= 'ACCE',
                      INTERPOL='LIN',
                      PROL_DROITE='CONSTANT',PROL_GAUCHE='CONSTANT',
                      LIST_INST=LINST,
                         NOM_CMP='DX');

axNMB = RECU_FONCTION( RESULTAT= ResuS, GROUP_NO='NMB', 
                      NOM_CHAM= 'ACCE',
                      INTERPOL='LIN',
                      PROL_DROITE='CONSTANT',PROL_GAUCHE='CONSTANT',
                      LIST_INST=LINST,
                         NOM_CMP='DX');

axNDB = RECU_FONCTION( RESULTAT= ResuS, GROUP_NO='NDB', 
                      NOM_CHAM= 'ACCE',
                      INTERPOL='LIN',
                      PROL_DROITE='CONSTANT',PROL_GAUCHE='CONSTANT',
                      LIST_INST=LINST,
                         NOM_CMP='DX');
                            


TEST_FONCTION(VALEUR=(
                      _F(VALE_CALC=0.9397878,
                         VALE_REFE=0.93358043,
                         PRECISION=7.0E-3,
                         REFERENCE='ANALYTIQUE',
                         CRITERE='RELATIF',
                         VALE_PARA=0.038,
                         FONCTION=axNGB,),
                      _F(VALE_CALC=0.93088869,
                         VALE_REFE=0.93358043,
                         PRECISION=4.0E-3,
                         REFERENCE='ANALYTIQUE',
                         CRITERE='RELATIF',
                         VALE_PARA=0.070,
                         FONCTION=axNMB,),
                      _F(VALE_CALC=0.93014237,
                         VALE_REFE=0.93358043,
                         PRECISION=4.0E-3,
                         REFERENCE='ANALYTIQUE',
                         CRITERE='RELATIF',
                         VALE_PARA=0.104,
                         FONCTION=axNDB,),
                      _F(VALE_CALC=1.8242024,
                         VALE_REFE=1.8671609,
                         PRECISION=2.4E-2,
                         REFERENCE='ANALYTIQUE',
                         CRITERE='RELATIF',
                         VALE_PARA=0.124,
                         FONCTION=axNGH,),
                      _F(VALE_CALC=1.799163,
                         VALE_REFE=1.8671609,
                         PRECISION=3.7E-2,
                         REFERENCE='ANALYTIQUE',
                         CRITERE='RELATIF',
                         VALE_PARA=0.156,
                         FONCTION=axNMH,),
                      _F(VALE_CALC=1.8446582,
                         VALE_REFE=1.8671609,
                         PRECISION=1.3E-2,
                         REFERENCE='ANALYTIQUE',
                         CRITERE='RELATIF',
                         VALE_PARA=0.188,
                         FONCTION=axNDH,),
                      ),
              )

FIN();
