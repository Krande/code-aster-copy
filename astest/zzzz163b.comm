# coding=utf-8
# --------------------------------------------------------------------
# Copyright (C) 1991 - 2024 - EDF R&D - www.code-aster.org
# This file is part of code_aster.
#
# code_aster is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# code_aster is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with code_aster.  If not, see <http://www.gnu.org/licenses/>.
# --------------------------------------------------------------------

DEBUT(CODE=_F(NIV_PUB_WEB="INTERNET"), DEBUG=_F(SDVERI="OUI"))
# ......................................................................

BEHAVIOUR = CREA_LIB_MFRONT(NOM_COMPOR="zzzz163b", UNITE_MFRONT=40)

M = LIRE_MAILLAGE(FORMAT="MED")

M = MODI_MAILLAGE(reuse=M, MAILLAGE=M, ORIE_PEAU=_F(GROUP_MA_PEAU="haut"))

MO = AFFE_MODELE(
    MAILLAGE=M,
    AFFE=_F(
	GROUP_MA=("s_droite", "s_gauche", "haut"), PHENOMENE="MECANIQUE", MODELISATION="D_PLAN"
    ),
)

ACIER = DEFI_MATERIAU(
    ELAS=_F(E=2e5, NU=0.3, ALPHA=0.0),
    MFRONT=_F(LISTE_COEF=(2e5, 0.3)),
    WEIBULL=_F(M=8.0, VOLU_REFE=1.25e-4, SIGM_REFE=2630.0e0),
)


CM = AFFE_MATERIAU(MAILLAGE=M, AFFE=_F(TOUT="OUI", MATER=ACIER))


ZERO = AFFE_CHAR_CINE(
    MODELE=MO,
    MECA_IMPO=(_F(GROUP_MA=("gauche", "droite"), DX=0.0), _F(GROUP_MA="bas", DX=0.0, DY=0.0)),
)


TRAC = DEFI_FONCTION(NOM_PARA="INST", VALE=(0.0, 0.0, 1.0, -0.5e4), PROL_DROITE="LINEAIRE")


CHARG = AFFE_CHAR_MECA_F(MODELE=MO, PRES_REP=_F(GROUP_MA="haut", PRES=TRAC))


L_INST = DEFI_LIST_REEL(
    DEBUT=0.0, INTERVALLE=(_F(JUSQU_A=0.2, NOMBRE=1), _F(JUSQU_A=0.5, NOMBRE=10))
)


# CALCUL MECANIQUE

U = STAT_NON_LINE(
    MODELE=MO,
    CHAM_MATER=CM,
    EXCIT=(_F(CHARGE=CHARG), _F(CHARGE=ZERO)),
    COMPORTEMENT=_F(RELATION="MFRONT",
		    RESI_INTE=1e-14,
		    COMPOR_MFRONT=BEHAVIOUR),
    INCREMENT=_F(LIST_INST=L_INST, NUME_INST_FIN=10),
    CONVERGENCE=_F(RESI_GLOB_RELA=1.0e-10),
)


# POST_BEREMIN AVEC OPTION SIGM_ELGA, PETIT DEF, SANS CORRECTION DE PLASTICITE
BERE = POST_BEREMIN(
    RESULTAT=U,
    COEF_MULT=1,
    DEFORMATION="PETIT",
    GROUP_MA="s_tout",
    FILTRE_SIGM="SIGM_ELGA",
    LIST_NUME_VARI=(5, 6),
)


# POST_BEREMIN AVEC OPTION SIGM_ELMOY, PETIT DEF, SANS CORRECTION DE PLASTICITE
BERE2 = POST_BEREMIN(
    RESULTAT=U,
    COEF_MULT=1,
    DEFORMATION="PETIT",
    GROUP_MA="s_tout",
    FILTRE_SIGM="SIGM_ELMOY",
    LIST_NUME_VARI=(5, 6),
)


# TESTS POST_BEREMIN

TEST_TABLE(
    CRITERE="RELATIF",
    VALE_REFE=4459.172269,
    VALE_CALC=4459.172269,
    PRECISION=0.01,
    REFERENCE="AUTRE_ASTER",
    NOM_PARA="SIGMA_WEIBULL",
    TABLE=BERE,
    FILTRE=(_F(NOM_PARA="NUME_ORDRE", VALE_I=4), _F(NOM_PARA="GROUP_MA", VALE_K="s_tout")),
)


TEST_TABLE(
    CRITERE="RELATIF",
    VALE_REFE=4459.172269,
    VALE_CALC=4459.172269,
    PRECISION=0.01,
    REFERENCE="AUTRE_ASTER",
    NOM_PARA="SIGMA_WEIBULL",
    TABLE=BERE2,
    FILTRE=(_F(NOM_PARA="NUME_ORDRE", VALE_I=4), _F(NOM_PARA="GROUP_MA", VALE_K="s_tout")),
)


FIN()
