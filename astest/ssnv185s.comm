# coding=utf-8
# --------------------------------------------------------------------
# Copyright (C) 1991 - 2023 - EDF R&D - www.code-aster.org
# This file is part of code_aster.
#
# code_aster is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# code_aster is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with code_aster.  If not, see <http://www.gnu.org/licenses/>.
# --------------------------------------------------------------------

DEBUT(CODE=_F(NIV_PUB_WEB="INTERNET"), DEBUG=_F(SDVERI="OUI"))

# <MODELE1_63> : DANS UN MODELE, IL EXISTE DES ELEMENTS DE TYPE "BORD"
#                  QUI N'ONT PAS DE VOISIN AVEC RIGIDITE
#                  LE MODELE PROVOQUANT CES ALARMES NE SERT QU'A LA VISUALISATION

# MODELISATION B : X-FEM FISSURE COINCIDENTE - TRACTION (FACE SUP)

# ----------------------------------------------
#                MAILLAGE : hexa_5_30_50.mgib
# ----------------------------------------------


MAILLAG1 = LIRE_MAILLAGE(FORMAT="GMSH", UNITE=19)

MAILLAG1 = DEFI_GROUP(
    reuse=MAILLAG1,
    MAILLAGE=MAILLAG1,
    CREA_GROUP_NO=(_F(GROUP_MA="PTA"), _F(GROUP_MA="PTB"), _F(GROUP_MA="PTC"), _F(GROUP_MA="VOL")),
)


# ----------------------------------------------
#                   MODELE ET FISSURE
# ----------------------------------------------

MODELEIN = AFFE_MODELE(
    MAILLAGE=MAILLAG1,
    AFFE=(
        _F(GROUP_MA=("VOL",), PHENOMENE="MECANIQUE", MODELISATION="3D"),
        _F(GROUP_MA=("SURFINF", "SURFSUP"), PHENOMENE="MECANIQUE", MODELISATION="3D"),
    ),
)

MAILLAG1 = MODI_MAILLAGE(
    reuse=MAILLAG1, MAILLAGE=MAILLAG1, ORIE_PEAU=_F(GROUP_MA_PEAU=("SURFSUP", "SURFINF"))
)

# PARAMETRES DE LA FISSURE : 0 < a < 6.5 -> influt sur le choix Rsup !
#                            b = 10.
a = 5.0
b = 10.0
# LN=FORMULE(NOM_PARA=('X','Y','Z'),VALE='Z-15.')
# LT=FORMULE(NOM_PARA=('X','Y','Z'),VALE='b-a-Y')
# on introduit une fissure cohesive
# que l on definit debouchante
FISS = DEFI_FISS_XFEM(
    MAILLAGE=MAILLAG1,
    INFO=1,
    TYPE_DISCONTINUITE="COHESIF",
    DEFI_FISS=_F(
        GROUP_MA_BORD="FONDINI",
        FORM_FISS="DEMI_PLAN",
        PFON=(0.0, -1.0, 15.0),
        NORMALE=(0.0, 0.0, 1.0),
        DTAN=(0.0, -1.0, 0.0),
    ),
)

# on met du contact dans le modele
MODELEK = MODI_MODELE_XFEM(MODELE_IN=MODELEIN, FISSURE=FISS, CONTACT="MORTAR", INFO=1)

CTX = DEFI_CONTACT(
    MODELE=MODELEK,
    FORMULATION="XFEM",
    FROTTEMENT="SANS",
    ZONE=(
        _F(
            INTEGRATION="GAUSS",
            ORDRE_INT=4,
            ALGO_CONT="CZM",
            FISS_MAIT=FISS,
            RELATION="CZM_LIN_MIX",
        )
    ),
)
# ----------------------------------------------
#                   MATERIAU
# ----------------------------------------------

# dans le materiau, on ajoute la partie cohesive
E = 205000.0e6
nu = 0.0
rho = 7800.0

# contrainte critique qui empeche une rupture complete
# ms zone cohesive de taille 1 ou 2
Gc = 1097.0
Sc = 30.0e6
pena_lagr = 10.0
ACIER = DEFI_MATERIAU(
    ELAS=_F(E=E, NU=nu, RHO=rho), RUPT_FRAG=_F(GC=Gc, SIGM_C=Sc, PENA_LAGR=pena_lagr)
)

CHAMPMAT = AFFE_MATERIAU(MAILLAGE=MAILLAG1, MODELE=MODELEK, AFFE=_F(TOUT="OUI", MATER=ACIER))

# ----------------------------------------------
#                   CHARGEMENTS
# ----------------------------------------------

# en fait il faut imposer uniquement les DDLs classiques a 0
PRES = -1.0e6
CH1 = AFFE_CHAR_MECA(
    MODELE=MODELEK,
    LIAISON_GROUP=(
        _F(
            GROUP_NO_1="PTA",
            GROUP_NO_2="PTA",
            DDL_1="DX",
            DDL_2="DX",
            COEF_MULT_1=0.5,
            COEF_MULT_2=0.5,
            COEF_IMPO=0.0,
        ),
        _F(
            GROUP_NO_1="PTA",
            GROUP_NO_2="PTA",
            DDL_1="DY",
            DDL_2="DY",
            COEF_MULT_1=0.5,
            COEF_MULT_2=0.5,
            COEF_IMPO=0.0,
        ),
        _F(
            GROUP_NO_1="PTA",
            GROUP_NO_2="PTA",
            DDL_1="DZ",
            DDL_2="DZ",
            COEF_MULT_1=0.5,
            COEF_MULT_2=0.5,
            COEF_IMPO=0.0,
        ),
        _F(
            GROUP_NO_1="PTB",
            GROUP_NO_2="PTB",
            DDL_1="DZ",
            DDL_2="DZ",
            COEF_MULT_1=0.5,
            COEF_MULT_2=0.5,
            COEF_IMPO=0.0,
        ),
        _F(
            GROUP_NO_1="PTC",
            GROUP_NO_2="PTC",
            DDL_1="DX",
            DDL_2="DX",
            COEF_MULT_1=0.5,
            COEF_MULT_2=0.5,
            COEF_IMPO=0.0,
        ),
        _F(
            GROUP_NO_1="PTC",
            GROUP_NO_2="PTC",
            DDL_1="DZ",
            DDL_2="DZ",
            COEF_MULT_1=0.5,
            COEF_MULT_2=0.5,
            COEF_IMPO=0.0,
        ),
    ),
)

# forces opposees d intensite egales sur les deux bords
CH2 = AFFE_CHAR_MECA(MODELE=MODELEK, PRES_REP=_F(GROUP_MA=("SURFSUP", "SURFINF"), PRES=PRES))

# ----------------------------------------------
#                   RESOLUTION
# ----------------------------------------------

# on definit une liste d instants et une fonction multiplicatrice
LINST = DEFI_LIST_REEL(VALE=(0.0, 0.5, 1.0))
FONC = DEFI_FONCTION(
    NOM_PARA="INST", PROL_GAUCHE="LINEAIRE", PROL_DROITE="LINEAIRE", VALE=(0.0, 0.0, 1.0, 1.0)
)
# le MECA_STATIQUE est remplace par un STAT_NON_LINE
# sans PILOTAGE pour le moment
RESU = STAT_NON_LINE(
    MODELE=MODELEK,
    CHAM_MATER=CHAMPMAT,
    EXCIT=(_F(CHARGE=CH1), _F(CHARGE=CH2, FONC_MULT=FONC)),
    CONTACT=CTX,
    COMPORTEMENT=_F(RELATION="ELAS", GROUP_MA="VOL"),
    INCREMENT=_F(LIST_INST=LINST),
    NEWTON=_F(REAC_ITER=1),
    CONVERGENCE=_F(RESI_GLOB_RELA=1.0e-6, ITER_GLOB_MAXI=15),
    SOLVEUR=_F(METHODE="MUMPS"),
    ARCHIVAGE=_F(CHAM_EXCLU=("VARI_ELGA",), INST=1.0),
    INFO=1,
)

# ------------------------------------------------------------------------
# POST-TRAITEMENT : ON FAIT UN CALCUL PAR LA METHODE COHESIVE
# ------------------------------------------------------------------------
# debut ajout
# on fait un CALC_G en methode cohesive
# mot cle NB_POINT_FOND ds mot-cle facteur THETA a enlever
SIF = CALC_G_XFEM(
    RESULTAT=RESU,
    OPTION="CALC_K_G",
    INST=1.0,
    THETA=_F(FISSURE=FISS, NUME_FOND=1, NB_POINT_FOND=2),
    LISSAGE=_F(LISSAGE_THETA="LAGRANGE", LISSAGE_G="LAGRANGE"),
)
IMPR_TABLE(TABLE=SIF, UNITE=6)
#
# fin ajout
# la soluction analytique
# SOLUTION ANALYTIQUE (chaboche p.53)
coef = (pi * a) / (2.0 * b)
fab = sqrt(tan(coef) / coef) * (0.752 + 0.37 * (1.0 - sin(coef)) ** 3 + 2.02 * a / b) / cos(coef)
K1REF = -PRES * sqrt(pi * a) * fab
GREF = (1 - nu**2) / E * K1REF**2


prec = 0.04

VAL_CALC = [1.1643586672024e07, 1.1643586672024e07, 661.33224677535, 661.33224677535]

# on fait des tests sur K1 et GIRWIN
# on enleve la boucle sur les couronnes
TEST_TABLE(
    TABLE=SIF,
    NOM_PARA="K1",
    TYPE_TEST="MAX",
    VALE_CALC=11643586.672,
    VALE_REFE=K1REF,
    CRITERE="RELATIF",
    PRECISION=prec,
    REFERENCE="ANALYTIQUE",
)

TEST_TABLE(
    TABLE=SIF,
    NOM_PARA="K1",
    TYPE_TEST="MIN",
    VALE_CALC=11643586.672,
    VALE_REFE=K1REF,
    CRITERE="RELATIF",
    PRECISION=prec,
    REFERENCE="ANALYTIQUE",
)

# calcul legendre pas ouvert avec le cohesif

GLAGR = CALC_G_XFEM(
    RESULTAT=RESU,
    OPTION="CALC_K_G",
    INST=1.0,
    THETA=_F(FISSURE=FISS, NUME_FOND=1),
    LISSAGE=_F(LISSAGE_THETA="LAGRANGE", LISSAGE_G="LAGRANGE"),
)

IMPR_TABLE(TABLE=SIF, UNITE=6)

TEST_TABLE(
    TABLE=GLAGR,
    NOM_PARA="G",
    TYPE_TEST="MAX",
    VALE_CALC=661.332246775,
    VALE_REFE=GREF,
    CRITERE="RELATIF",
    PRECISION=0.09,
    REFERENCE="ANALYTIQUE",
)

TEST_TABLE(
    TABLE=GLAGR,
    NOM_PARA="G",
    TYPE_TEST="MIN",
    VALE_CALC=661.332246775,
    VALE_REFE=GREF,
    CRITERE="RELATIF",
    PRECISION=0.09,
    REFERENCE="ANALYTIQUE",
)

# ------------------------------------------------------------------------
# POST-TRAITEMENT : MAILLAGE FISSURE
# TESTS de NON REGRESSION SUR LES VALEURS DU DEPLACEMENT
# ------------------------------------------------------------------------

MA_VISU = POST_MAIL_XFEM(MODELE=MODELEK)

TABDEP = POST_RELEVE_T(
    ACTION=_F(
        INTITULE="DEPLE",
        GROUP_NO="VOL",
        RESULTAT=RESU,
        NOM_CHAM="DEPL",
        NUME_ORDRE=1,
        NOM_CMP="DX",
        OPERATION="EXTRACTION",
    )
)

# TESTS DE NON REGRESSION PAR RAPPORT A LA VERSION 8.2.14

DXREF = 2668.5
DYREF = 24990.0
DZREF = 80055.0
PREC = 1.0e-10

TEST_TABLE(
    TABLE=TABDEP, NOM_PARA="COOR_X", TYPE_TEST="SOMM_ABS", VALE_CALC=2668.5, CRITERE="RELATIF"
)

TEST_TABLE(
    TABLE=TABDEP, NOM_PARA="COOR_Y", TYPE_TEST="SOMM_ABS", VALE_CALC=24990.0, CRITERE="RELATIF"
)

TEST_TABLE(
    TABLE=TABDEP, NOM_PARA="COOR_Z", TYPE_TEST="SOMM_ABS", VALE_CALC=80055.0, CRITERE="RELATIF"
)


# ------------------------------------------------------------------------
# POST-TRAITEMENT DES DEPLACEMENTS, CONTRAINTES ET DEFORMATIONS POUR VISU
# ------------------------------------------------------------------------

MOD_VISU = AFFE_MODELE(
    MAILLAGE=MA_VISU, AFFE=_F(TOUT="OUI", PHENOMENE="MECANIQUE", MODELISATION="3D")
)

RES_VISU = POST_CHAM_XFEM(MODELE_VISU=MOD_VISU, RESULTAT=RESU)

MAT_VISU = AFFE_MATERIAU(MAILLAGE=MA_VISU, AFFE=_F(TOUT="OUI", MATER=ACIER))

RES_VISU = CALC_CHAMP(
    reuse=RES_VISU, RESULTAT=RES_VISU, CHAM_MATER=MAT_VISU, DEFORMATION="EPSI_ELGA"
)

# on enleve l impression du resultat

TEST_RESU(
    RESU=(
        _F(
            NUME_ORDRE=1,
            TYPE_TEST="SOMM_ABS",
            RESULTAT=RES_VISU,
            NOM_CHAM="DEPL",
            NOM_CMP="DX",
            VALE_CALC=2.66788594713e-12,
            CRITERE="ABSOLU",
        ),
        _F(
            NUME_ORDRE=1,
            TYPE_TEST="SOMM_ABS",
            RESULTAT=RES_VISU,
            NOM_CHAM="DEPL",
            NOM_CMP="DY",
            VALE_CALC=0.928157255729,
            CRITERE="ABSOLU",
        ),
        _F(
            NUME_ORDRE=1,
            TYPE_TEST="SOMM_ABS",
            RESULTAT=RES_VISU,
            NOM_CHAM="DEPL",
            NOM_CMP="DZ",
            VALE_CALC=0.546124954628,
            CRITERE="ABSOLU",
        ),
    )
)

FIN()
