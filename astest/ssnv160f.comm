# coding=utf-8
# --------------------------------------------------------------------
# Copyright (C) 1991 - 2022 - EDF R&D - www.code-aster.org
# This file is part of code_aster.
#
# code_aster is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# code_aster is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with code_aster.  If not, see <http://www.gnu.org/licenses/>.
# --------------------------------------------------------------------

# person_in_charge: simon.raude at edf.fr

# >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
# >>> Isotropic compression test on a 3D HEXA8 element with the KH_CSSM model
# <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

DEBUT(CODE=_F(NIV_PUB_WEB="INTERNET"), DEBUG=_F(SDVERI="NON"))

### >>>>>>>>
### >>> Mesh
### <<<<<<<<

MAIL = LIRE_MAILLAGE(FORMAT="ASTER")

### >>>>>>>>>
### >>> Model
### <<<<<<<<<

MODELE = AFFE_MODELE(MAILLAGE=MAIL, AFFE=_F(TOUT="OUI", PHENOMENE="MECANIQUE", MODELISATION="3D"))

### >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
### >>> Definition of the material
### <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

k = 100.0e6
g = 60.0e6
e = 9.0 * k * g / (3.0 * k + g)
nu = (3.0 * k - 2.0 * g) / 2.0 / (3.0 * k + g)

MATER = DEFI_MATERIAU(
    ELAS=_F(E=e, NU=nu, ALPHA=0.0),
    KH_CSSM=_F(
        BulkModulus=k,
        ShearModulus=g,
        SwellingIndex=200.0,
        InitPreconsPress=10.0e6,
        InitTensionPress=1.0e6,
        CamClayCSS=1.0,
        YieldSurfLinCoef=1.0,
        YieldSurfCapCoef=2.0,
        PlastCompIndex=50.0,
        KHModulus=30.0e6,
        KHIndex=1.0,
    ),
)

CHM = AFFE_MATERIAU(MAILLAGE=MAIL, AFFE=_F(TOUT="OUI", MATER=MATER))

### >>>>>>>>>>>>>>
### >>> Time steps
### <<<<<<<<<<<<<<

LI1 = DEFI_LIST_REEL(
    DEBUT=0.0,
    INTERVALLE=(
        _F(JUSQU_A=1.0, NOMBRE=50),
        _F(JUSQU_A=2.0, NOMBRE=50),
        _F(JUSQU_A=3.0, NOMBRE=50),
        _F(JUSQU_A=4.0, NOMBRE=50),
    ),
)

DEFLIST = DEFI_LIST_INST(
    DEFI_LIST=_F(LIST_INST=LI1), ECHEC=_F(EVENEMENT="ERREUR", ACTION="DECOUPE", SUBD_METHODE="AUTO")
)

### >>>>>>>>>>>>>>>>>>>>>>
### >>> Loading conditions
### <<<<<<<<<<<<<<<<<<<<<<

### >>>>>> Pressure

PRESS2 = DEFI_FONCTION(
    NOM_PARA="INST",
    NOM_RESU="PRESSION",
    VALE=(0.0, 0.000, 1.0, 15.0e6, 2.0, 0.01e6, 3.0, 30.0e6, 4.0, 0.01e6),
    PROL_DROITE="CONSTANT",
    PROL_GAUCHE="EXCLU",
)

CHA2 = AFFE_CHAR_MECA_F(
    MODELE=MODELE, PRES_REP=_F(GROUP_MA=("HAUT", "DROITE", "ARRIERE"), PRES=PRESS2), VERI_NORM="OUI"
)

### >>>>>> Displacements

CHA0 = AFFE_CHAR_MECA(
    MODELE=MODELE,
    DDL_IMPO=(
        _F(GROUP_NO=("NO1", "NO2", "NO4", "NO3"), DZ=0.0),
        _F(GROUP_NO=("NO3", "NO4", "NO7", "NO8"), DY=0.0),
        _F(GROUP_NO=("NO2", "NO4", "NO6", "NO8"), DX=0.0),
    ),
)

### >>>>>>>>>>>>
### >>> Solution
### <<<<<<<<<<<<

RESU1 = STAT_NON_LINE(
    MODELE=MODELE,
    CHAM_MATER=CHM,
    EXCIT=(_F(CHARGE=CHA0), _F(CHARGE=CHA2)),
    COMPORTEMENT=_F(RELATION="KH_CSSM", RESI_INTE_RELA=1.0e-14, ITER_INTE_MAXI=100),
    INCREMENT=_F(LIST_INST=DEFLIST),
    NEWTON=_F(MATRICE="TANGENTE", REAC_ITER=1),
    CONVERGENCE=_F(ITER_GLOB_MAXI=20, RESI_GLOB_RELA=1.0e-10),
    SOLVEUR=_F(METHODE="MUMPS"),
)

### >>>>>>>>>>>>>>>>>>>>>>>>>>>>>
### >>> Compute some extra fields
### <<<<<<<<<<<<<<<<<<<<<<<<<<<<<

RESU1 = CALC_CHAMP(
    reuse=RESU1,
    RESULTAT=RESU1,
    CONTRAINTE="SIEF_NOEU",
    DEFORMATION="EPSI_NOEU",
    VARI_INTERNE="VARI_NOEU",
)

### >>>>>>>>>>>>>>>
### >>> IMPR_RESU()
### <<<<<<<<<<<<<<<

# IMPR_RESU(FORMAT='MED',
#          UNITE=80,
#          RESU=_F(RESULTAT=RESU1,),)

### >>>>>>>>>
### >>> Tests
### <<<<<<<<<

### >>>>>> INST=1.

TEST_RESU(
    RESU=_F(
        INST=1.0,
        REFERENCE="ANALYTIQUE",
        RESULTAT=RESU1,
        NOM_CHAM="EPSI_NOEU",
        GROUP_NO="NO6",
        NOM_CMP="EPXX",
        VALE_REFE=-0.008426412728196,
        VALE_CALC=-0.008426412728180458,
    )
)

TEST_RESU(
    RESU=_F(
        INST=1.0,
        REFERENCE="ANALYTIQUE",
        RESULTAT=RESU1,
        NOM_CHAM="VARI_NOEU",
        GROUP_NO="NO6",
        NOM_CMP="V8",
        VALE_REFE=-0.002703100720721,
        VALE_CALC=-0.002703100720701211,
    )
)

### >>>>>> INST=2.

TEST_RESU(
    RESU=_F(
        INST=2.0,
        REFERENCE="ANALYTIQUE",
        RESULTAT=RESU1,
        NOM_CHAM="EPSI_NOEU",
        GROUP_NO="NO6",
        NOM_CMP="EPXX",
        VALE_REFE=-0.002736105099548,
        VALE_CALC=-0.002736105099532177,
    )
)

TEST_RESU(
    RESU=_F(
        INST=2.0,
        REFERENCE="ANALYTIQUE",
        RESULTAT=RESU1,
        NOM_CHAM="VARI_NOEU",
        GROUP_NO="NO6",
        NOM_CMP="V8",
        VALE_REFE=-0.002703100720721,
        VALE_CALC=-0.002703100720701211,
    )
)

### >>>>>> INST=3.

TEST_RESU(
    RESU=_F(
        INST=3.0,
        REFERENCE="ANALYTIQUE",
        RESULTAT=RESU1,
        NOM_CHAM="EPSI_NOEU",
        GROUP_NO="NO6",
        NOM_CMP="EPXX",
        VALE_REFE=-0.014175538364743,
        VALE_CALC=-0.014175538364724552,
    )
)

TEST_RESU(
    RESU=_F(
        INST=3.0,
        REFERENCE="ANALYTIQUE",
        RESULTAT=RESU1,
        NOM_CHAM="VARI_NOEU",
        GROUP_NO="NO6",
        NOM_CMP="V8",
        VALE_REFE=-0.007324081924454,
        VALE_CALC=-0.007324081924433496,
    )
)

### >>>>>> INST=4.

TEST_RESU(
    RESU=_F(
        INST=4.0,
        REFERENCE="ANALYTIQUE",
        RESULTAT=RESU1,
        NOM_CHAM="EPSI_NOEU",
        GROUP_NO="NO6",
        NOM_CMP="EPXX",
        VALE_REFE=-0.007357086303281,
        VALE_CALC=-0.007357086303262677,
    )
)

TEST_RESU(
    RESU=_F(
        INST=4.0,
        REFERENCE="ANALYTIQUE",
        RESULTAT=RESU1,
        NOM_CHAM="VARI_NOEU",
        GROUP_NO="NO6",
        NOM_CMP="V8",
        VALE_REFE=-0.007324081924454,
        VALE_CALC=-0.007324081924433496,
    )
)


FIN()
