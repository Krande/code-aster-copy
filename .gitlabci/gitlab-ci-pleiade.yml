variables:
  MINIO_URL: https://minio.retd.edf.fr
  MINIO_MC: ./mc --insecure
  ROOT_URL: https://$GITLAB_TOKEN_NAME:$GITLAB_TOKEN@gitlab.pleiade.edf.fr/codeaster
  PREREQ_VERSION: 20221225
  OSNAME: debian-11
  IMAGE_URL: ${DOCKER_NEXUS_URL}/codeaster-prerequisites:${PREREQ_VERSION}-${OSNAME}
  BUILD: mpi
  # BUILDTYPE: ci, nightly
  BUILDTYPE: ci
  REFREV: ${CI_MERGE_REQUEST_TARGET_BRANCH_NAME}
  GIT_SSL_NO_VERIFY: "true"
  NPROC_MAX: 12
  FF_DISABLE_UMASK_FOR_DOCKER_EXECUTOR: "true"

default:
  tags:
    - docker-executor

workflow:
  rules:
    - if: $CI_MERGE_REQUEST_IID
    - if: $CI_COMMIT_REF_NAME == "v16" && $CI_PIPELINE_SOURCE == "schedule"
      variables:
        REFREV: v16
    - if: $CI_PIPELINE_SOURCE == "web"
      variables:
        REFREV: v16

  auto_cancel:
    on_new_commit: interruptible

stages:
  - setup
  - build
  - test

image:
  name: ${IMAGE_URL}

.prepare:
  interruptible: true
  stage: setup
  script:
    - .gitlabci/prepare.sh
  artifacts:
    paths:
      - devtools/*
      - data-src/*
    expire_in: 6 hours

.compile:
  interruptible: true
  stage: build
  script:
    - .gitlabci/compile.sh
  artifacts:
    when: always
    paths:
      - .lock*
      - build/*
      - install/*
    expire_in: 6 hours

doc_html:
  interruptible: true
  stage: build
  needs: ["prepare", "compile"]
  script:
    - .gitlabci/doc_html.sh
  artifacts:
    paths:
      - install/share/doc/html/*
    expire_in: 3 days
  rules:
    - if: $CI_MERGE_REQUEST_IID

minimal_build:
  interruptible: true
  stage: test
  needs:
    - job: prepare
    - job: compile
      artifacts: false
    - job: check_source
      artifacts: false
  script:
    - .gitlabci/compile_minimal.sh
  rules:
    - if: $CI_MERGE_REQUEST_IID

check_source:
  interruptible: true
  stage: test
  needs: ["prepare", "compile"]
  script:
    - .gitlabci/check_source.sh
  artifacts:
    paths:
      - list_issues.txt
    expire_in: 3 days
  rules:
    - if: $CI_MERGE_REQUEST_IID

check_issues:
  interruptible: true
  stage: test
  needs: ["prepare", "check_source"]
  script:
    - .gitlabci/check_issues.sh
  rules:
    - if: $CI_MERGE_REQUEST_IID

minimal_test:
  interruptible: true
  stage: test
  needs: ["prepare", "compile"]
  script:
    - .gitlabci/test.sh
        -R "(asrun0|mumps02b|supv002|vocab0|zzzz509j)"
        --resutest=results_mini
  artifacts:
    when: always
    paths:
      - results_mini/run_testcases.xml
      - results_mini/Testing/Temporary/*
      - results_mini/*
    expire_in: 3 days
    reports:
      junit: results_mini/run_testcases.xml
  rules:
    - if: $CI_MERGE_REQUEST_IID

.verification_test:
  interruptible: true
  stage: test
  tags:
    - hulk
  script:
    - .gitlabci/test.sh
        -L verification
        --exclude-testlist .gitlabci/known_failures-pleiade.list
        --resutest=results
  artifacts:
    when: always
    paths:
      - results/run_testcases.xml
      - results/Testing/Temporary/*
      - results/*
    expire_in: 3 days
    reports:
      junit: results/run_testcases.xml

known_failures_test:
  interruptible: true
  stage: test
  needs:
    - job: prepare
    - job: compile
    - job: minimal_test
      artifacts: false
  script:
    - .gitlabci/test.sh
        --testlist .gitlabci/known_failures-pleiade.list
        --resutest=results_failures
  allow_failure: true
  artifacts:
    when: always
    paths:
      - results_failures/run_testcases.xml
      - results_failures/Testing/Temporary/*
      - results_failures/*
    expire_in: 3 days
    reports:
      junit: results_failures/run_testcases.xml
  rules:
    - if: $CI_MERGE_REQUEST_IID

# --- default build
prepare:
  extends: .prepare

compile:
  extends: .compile
  needs:
    - job: prepare

verification_test:
  extends: .verification_test
  needs:
    - job: prepare
    - job: compile
    - job: minimal_test
      artifacts: false
      optional: true
    - job: check_source
      artifacts: false
      optional: true
    - job: doc_html
      artifacts: false
      optional: true

# --- variant debian-12 for nightly build
prepare_debian-12:
  variables:
    OSNAME: debian-12
  extends: .prepare
  rules:
    - if: $BUILDTYPE == "nightly"

compile_debian-12:
  variables:
    OSNAME: debian-12
  extends: .compile
  needs:
    - prepare_debian-12
  rules:
    - if: $BUILDTYPE == "nightly"

verification_test_debian-12:
  variables:
    OSNAME: debian-12
  extends: .verification_test
  needs:
    - prepare_debian-12
    - compile_debian-12
  rules:
    - if: $BUILDTYPE == "nightly"


